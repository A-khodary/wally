%--------------------------------------------------------------------------
% get1ICPtransformation
% coded by George Chen
%
% Helper function for constructing a 6-DOF transformation and its
% covariance for the 1xICP case.
%
% This function is called only by the main localization function
% ("localization.m"). See localization.m for how this function is called.

function [u, uCov] = ...
    get1ICPtransformation(rollInitial, ...
                          pitchInitial, ...
                          yawInitial, ...
                          rollFinal, ...
                          pitchFinal, ...
                          yawFinal, ...
                          deltaZ, ...
                          tx, ...
                          ty, ...
                          varRoll, ...
                          varPitch, ...
                          varDeltaZ, ...
                          varTx, ...
                          varTy, ...
                          varDroll, ...
                          varDpitch, ...
                          varDyaw)

rotInitial  = rpy2rot([rollInitial; pitchInitial; yawInitial]);
rotFinal    = rpy2rot([rollFinal; pitchFinal; yawFinal]);
localRot    = rotInitial' * rotFinal;
localRotRPY = decomposeRotationMatrix(localRot);

secP = sec(pitchInitial);
tanP = tan(pitchInitial);
secR = sec(rollInitial);
tanR = tan(rollInitial);

tz = sec(pitchInitial)*sec(rollInitial)*deltaZ + ...
     tan(pitchInitial)*sec(rollInitial)*tx     - ...
     tan(rollInitial)*ty;

droll  = localRotRPY(1);
dpitch = localRotRPY(2);
dyaw   = localRotRPY(3);

J     = [secP*tanP*secR*deltaZ + ...
           secP^2*secR*tx, ...
         secP*secR*tanR*deltaZ + ...
           tanP*secR*tanR*tx - ...
           secR^2*ty, ...
         secP*secR...
         tanP*secR, ...
         -tanR];
Sigma = diag([varPitch, ...
              varRoll, ...
              varDeltaZ, ...
              varTx, ...
              varTy]);

varTz = J*Sigma*J';

u    = [tx; ty; tz; droll; dpitch; dyaw];
uCov = diag([varTx; varTy; varTz; varDroll; varDpitch; varDyaw]);

end
