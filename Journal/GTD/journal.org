#+LATEX_HEADER: \usepackage[boxed, lined]{algorithm2e}
# #+LATEX_HEADER: \usepackage{minted}
# #+LATEX_HEADER: \usepackage{float}

# freemind
# .sdcv_history
# agenda
# obj

* Journal
** ROS

- sql http://wiki.ros.org/sql_database
- arbotix_python http://wiki.ros.org/arbotix_python?distro=indigo#Services
- Q&A
  - http://answers.ros.org/question/95486/hector-slam-with-turtlebot-in-gazebo/
  - http://answers.ros.org/question/46004/turtlebothector-slam-possibile-or-not/
- http://wiki.ros.org/hector_turtlebot
- http://wiki.ros.org/hector_turtlebot
- http://www.ros.org/news/2014/12/updated-package-razor-imu-9dof.html
-
  http://answers.ros.org/question/99211/how-to-combine-a-camera-image-and-a-laser-pointcloud-to-create-a-color-pointcloud/

** 2016

- [X] +dota2+
- [X] fcitx
- [X] +vim+

*** list

- [ ] <算法导论>
- [ ] makeups
- [ ] UTG 线

*** NEXT 使用 blender 制作 Mecanum 轮
- State "NEXT"       from "TODO"       [2016-01-30 六 15:46]
**** DONE 准备
- State "DONE"       from "TODO"       [2016-01-30 六 15:18]
- [X] blender + dae
- [X] 文献
- [X] matlab
- [X] wine + CAJ + FoxitReader
- [X] blender 本地教程

*** NEXT Thesis
- State "NEXT"       from "TODO"       [2016-01-30 六 15:46]
**** DONE preperation
- State "DONE"       from "TODO"       [2016-01-30 六 15:18]
- [X] workspace
- [X] texlive
- [X] emacs + auctex
- [X] wine + CAJ

*** NEXT Gazebo sim
- State "NEXT"       from "TODO"       [2016-01-30 六 20:18]
**** DONE preparation
- State "DONE"       from "TODO"       [2016-01-30 六 20:18]
- [X] gazebo models
- [X] gazebo doc

*** NEXT imusim
- State "NEXT"       from "TODO"       [2016-01-30 六 15:46]
**** DONE preperation
- State "DONE"       from "TODO"       [2016-01-30 六 15:24]
- [X] source code
- [X] matlab
- [X] book

*** NEXT algorithms
- State "NEXT"       from "TODO"       [2016-01-30 六 15:46]
**** DONE preperation
- State "DONE"       from "TODO"       [2016-01-30 六 15:26]
- [X] book in papaer

*** NEXT PF
- State "NEXT"       from "TODO"       [2016-01-30 六 15:46]
**** DONE preparation
- State "DONE"       from "TODO"       [2016-01-30 六 15:38]
- [X] blog
- [X] source
- [X] math textbook

*** NEXT SLAM sim
- State "NEXT"       from "TODO"       [2016-01-30 六 15:46]
**** DONE preparation
- State "DONE"       from "TODO"       [2016-01-30 六 15:28]
- [X] source code
- [X] matlab

*** NEXT SLAM python 2d
- State "NEXT"       from "TODO"       [2016-01-30 六 15:46]
**** DONE preperation
- State "DONE"       from "TODO"       [2016-01-30 六 15:27]
- [X] 视频
- [X] 源码
*** NEXT es tools
- State "NEXT"       from "TODO"       [2016-01-30 六 19:59]
**** DONE preparation
- State "DONE"       from "TODO"       [2016-01-30 六 19:59]
- [X] avr
- [X] arduino
- [X] cross-tool

*** TODO Deutsch

**** TODO preparation

- [ ] VM
- [ ] video course
- [ ] movie
- [ ] audio  & article slown genmen

*** TODO PCL

**** DONE preparation

- State "DONE"       from "TODO"       [2016-02-06 六 16:46]
- [X] lib
- [X] rospack
- [X] doc/ref
- [X] qtcreator

**** pcltk
*** NEXT Kindle
- State "NEXT"       from "TODO"       [2016-01-30 六 20:17]
**** DONE preparation
- State "DONE"       from "TODO"       [2016-01-30 六 20:17]
- [X] 王小波时代四部曲
- [X] 爱的艺术
- [X] 安娜卡列妮娜

**** DONE 安娜卡列妮娜
- State "DONE"       from ""           [2016-02-06 六 10:06] \\
  《安娜卡列妮娜》

**** DONE 爱的艺术
- State "DONE"       from "TODO"       [2016-02-15 一 14:56]
- State "TODO"       from ""           [2016-02-06 六 10:07]
*** NEXT Eason
- State "NEXT"       from "TODO"       [2016-01-30 六 19:58]
**** DONE preparation
- State "DONE"       from "TODO"       [2016-01-30 六 19:58]
- [X] 3mm 专辑及歌词
- [X] Under My Skin 专辑及歌词
- [X] 准备中 专辑及歌词
**** DONE Strange Under My Skin
- State "DONE"       from ""           [2016-02-04 四 23:34]

*** matplotlib
*** metapost
*** 2016/02/09

** PIL : Python Image Library                                    :pil:image:

*** overview

[[http://www.pythonclub.org/modules/pil/start][Python 图像处理模块 PIL(Python Image Library)]]

**** 简介

这两天用python写一个程序,需要对各种格式的图片进行一些简单的处理,采用了Python
Imaging Library
(PIL)库,这个库可用于图片的一些常用操作,比如改变图片格式、尺寸、色彩、旋转等。

-  pil站点:
   [[http://www.pythonware.com/products/pil/index.htm][http://www.pythonware.com/products/pil/index.htm]]
-  pil下载:
   [[http://effbot.org/downloads/Imaging-1.1.6.tar.gz][http://effbot.org/downloads/Imaging-1.1.6.tar.gz]]
-  pil文档:
   [[http://www.pythonware.com/library/pil/handbook/index.htm][http://www.pythonware.com/library/pil/handbook/index.htm]]

**** 安装

#+BEGIN_EXAMPLE
    $ gunzip Imaging-1.1.6.tar.gz
    $ tar xvf Imaging-1.1.6.tar
    $ cd Imaging-1.1.6
    $ python setup.py build_ext -i
    $ python selftest.py
    $ python setup.py install
#+END_EXAMPLE

安装完毕后,可在python安装目录下的site-packages找到PIL安装目录。

**** 使用

如果你想使用PIL的Image类，就直接import Image即可，详细的使用方法请阅读其文档。


* Week
