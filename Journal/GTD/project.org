# project.org

* Prime                                                               :prime:
** Thesis

#+INCLUDE: ~/Wally/GraduationProject/Thesis/README.md
#+INCLUDE: ~/Wally/GraduationProject/Thesis/ChangeLog.txt
#+INCLUDE: ~/Wally/GraduationProject/Thesis/literature.org
#+INCLUDE: ~/Wally/GraduationProject/Thesis/julie.org
#+INCLUDE: ~/Wally/GraduationProject/Thesis/thesis.tex
#+INCLUDE: ~/Wally/Project/BUAAthesis

*** buaathesis
**** BUAAthesis analysis
***** 文件后缀bst cls
+ *cls* (class): 稿件类型文件，可用命令\documentclass调用。
+ *bst*: BibTeX-style-file

***** encoding                                                 :encoding:

多人合作的时候涉及多平台，因而统一编码非常重要。
#+begin_latex
\begin{minted}[frame=single, mathescape]{latex}
% !mode:: "tex:utf-8"
...
\end{minted}
#+end_latex

***** 模板声明
#+begin_latex
  \begin{minted}[frame=single, mathescape]{latex}
  \NeedsTeXFormat{LaTeX2e}[2007/10/19]
  \ProvidesClass{buaathesis}
                [2012/07/06 v0.8
  The LaTeX template for thesis of BUAA]
  \typeout{Document Class `buaathesis' v0.8 by BHOSC (2012/07)}

  ...

  \DeclareOption{twoteacher}{\buaa@twoteachertrue}
  % 其余选项传递给ctexbook
  \DeclareOption*{\PassOptionsToClass{\CurrentOption}{ctexbook}}
  \ProcessOptions\relax
  % 引用ctexbook及基本设置
  \LoadClass[cs4size,a4paper,fancyhdr]{ctexbook}[2007/10/19]

  %%%%%%%%%% global package %%%%%%%%%%
  % 全局通用宏包

  \RequirePackage{ifthen}

  \end{minted}
#+end_latex

1. \textbackslash{}NeedsTeXFormat
   specifies which version of TeX or LaTeX is required at least to run
   your package. The optional date may be used to specify the version
   more precisely.

2. \textbackslash{}ProvidesClass
   A package introduces itself using this command.
   1) <name> should be identical to the basename of the file itself.
   2) <version> should should begin with a date in the format
      YYYY/MM/DD. Version information should be kept updated while
      developing a package.

3. \textbackslash{}typeout

4. \textbackslash{}RequirePackage
   is equivalent to \textbackslash{}usepackage.

5. \textbackslash{}DeclareOptions
   are end-user parameters. Each option is declared by one such
   command.

6. \textbackslash{}ExecuteOptions{...}
   tells which are the default.

7. \textbackslash{}ProcessOptions\textbackslash{}relax
   terminates the option processing.

8. \textbackslash{}endinput
   this must be the last command(for package(.sty) not for class(cls)).

***** 选项
#+begin_latex
\begin{minted}[frame=single, mathescape]{latex}
% 本模板自身包含五个选项
% 前四个为对应学位类型，决定不同样式
% 第五个为颜色选项，用于电子版的情况
\newif\ifbuaa@bachelor\buaa@bachelorfalse
\newif\ifbuaa@master\buaa@mastertrue
\newif\ifbuaa@engineer\buaa@engineerfalse
\newif\ifbuaa@doctor\buaa@doctorfalse
\newif\ifbuaa@color\buaa@colorfalse
\newif\ifbuaa@twoteacher\buaa@twoteacherfalse
\DeclareOption{bachelor}{\buaa@bachelortrue}
\DeclareOption{master}{\buaa@mastertrue}
\DeclareOption{engineer}{\buaa@engineertrue}
\DeclareOption{doctor}{\buaa@doctortrue}
\DeclareOption{color}{\buaa@colortrue}
\DeclareOption{twoteacher}{\buaa@twoteachertrue}
% 其余选项传递给ctexbook
\DeclareOption*{\PassOptionsToClass{\CurrentOption}{ctexbook}}
\end{minted}
#+end_latex

***** 字体与颜色
#+begin_latex
  \begin{minted}[frame=single, mathescape]{latex}
  \setmainfont{Times New Roman}
  % 不需要设置CJKmainfont，ctex 宏包已经很好的处理了
  % 不仅设置了粗体为黑体，斜体为楷体，还兼容了winfonts和adobefonts
  % 直接设置反而会在只有adobefonts的情况下报错
  % \setCJKmainfont{宋体}
  \setCJKfamilyfont{hwxingkai}{STXingkai}
  \newcommand{\hwxingkai}{\CJKfamily{hwxingkai}}
  \newcommand{\xiaochuhao}{\fontsize{32pt}{\baselineskip}\selectfont}

  %%%%%%%%%% color %%%%%%%%%%
  % 颜色设置

  % 只用于电子版
  \RequirePackage{color}
  \definecolor{dkgreen}{rgb}{0,0.6,0}
  \definecolor{gray}{rgb}{0.5,0.5,0.5}
  \definecolor{mauve}{rgb}{0.58,0,0.82}
  \end{minted}
#+end_latex

1. \textbackslash{}setmintfont
2. \textbackslash{}newcommand{}{}
3. \textbackslash{}{}{}{}

***** 页边距
#+begin_latex
  \begin{minted}[frame=single, mathescape]{latex}
  \RequirePackage{geometry}
  \newgeometry{
      top=30mm, bottom=25mm, left=30mm, right=20mm,
      headsep=5mm,
  }
  \savegeometry{bachelorgeometry}
  \newgeometry{
      top=25mm, bottom=25mm, left=30mm, right=20mm,
      headsep=5mm, headheight=10mm, footskip=10mm,
  }
  \savegeometry{mastergeometry}

  \ifbuaa@bachelor
      \loadgeometry{bachelorgeometry}
  \else
      \loadgeometry{mastergeometry}
  \fi

  \end{minted}
#+end_latex

+ \textbackslash{}newgeometry
+ \textbackslash{}savegeometry
+ \textbackslash{}if...\textbackslash{}else...\textbackslash{}fi

***** 其它间距

#+begin_latex
  \begin{minted}[frame=single, mathescape]{latex}
  \renewcommand{\baselinestretch}{1.5}
  \setlength{\parindent}{2em}
  \setlength{\floatsep}{3pt plus 3pt minus 2pt}      % 图形之间或图形与正文之间的距离
  \setlength{\abovecaptionskip}{10pt plus 1pt minus 1pt} % 图形中的图与标题之间的距离
  \setlength{\belowcaptionskip}{3pt plus 1pt minus 2pt} % 表格中的表与标题之间的距离
  \end{minted}
#+end_latex

+ \textbackslash{}renewcommand
+ \textbackslash{}setlength

***** 汉化
#+begin_latex
  \begin{minted}[frame=single, mathescape]{latex}
  \renewcommand{\contentsname}{目\qquad 录}
  \renewcommand\listfigurename{插\ 图\ 目\ 录}
  \renewcommand\listtablename{表\ 格\ 目\ 录}
  \renewcommand\bibname{参\ 考\ 文\ 献}
  \renewcommand{\figurename}{图}
  \renewcommand{\tablename}{表}
  \end{minted}
#+end_latex

***** 段落格式
#+begin_latex
  \begin{minted}[frame=single, mathescape]{latex}
  % 格式
  \CTEXsetup[
      format={\centering\zihao{3}\heiti},
      nameformat={},
      aftername={\quad},
      titleformat={},
      beforeskip={-.5\baselineskip},
      afterskip={\baselineskip},
  ]{chapter}
  \CTEXsetup[
      aftername={\quad},
      beforeskip={.5\baselineskip},
      afterskip={.5\baselineskip},
  ]{section}
  \CTEXsetup[
      format={\zihao{-4}\heiti},
      aftername={\quad},
      beforeskip={.5\baselineskip},
      afterskip={.5\baselineskip},
  ]{subsection}
  \ifbuaa@bachelor
      \CTEXsetup[
          name={,},
          number={\arabic{chapter}},
      ]{chapter}
      \CTEXsetup[
          format={\zihao{-4}\heiti},
      ]{section}
  \else
      \CTEXsetup[
          name={第,章},
          number={\chinese{chapter}},
      ]{chapter}
      \CTEXsetup[
          format={\zihao{4}\heiti},
      ]{section}
  \fi

  \end{minted}
#+end_latex

***** 图片
#+begin_latex
  \begin{minted}[frame=single, mathescape]{latex}
  %%%%%%%%%% picture %%%%%%%%%%
  % 图片

  \RequirePackage{graphicx}
  \DeclareGraphicsExtensions{.eps,.ps,.jpg,.bmp}
  \graphicspath{{figure/}}
  \RequirePackage{pifont} % “秘级”后的五角星
  \RequirePackage{subfigure}

  \end{minted}
#+end_latex

***** 列表
#+begin_latex
\begin{minted}[frame=single, mathescape]{latex}
%%%%%%%%%% list %%%%%%%%%%
% 列表

\RequirePackage{enumitem}
\setlist{noitemsep}
\setlist[1,2]{labelindent=\parindent}
\setlist[enumerate,1]{label=\arabic*、}
\setlist[enumerate,2]{label=（\arabic*）}
\setlist{
    topsep=0pt,
    itemsep=0pt,
    partopsep=0pt,
    parsep=\parskip,
}

\end{minted}
#+end_latex

***** 代码
#+begin_latex
  \begin{minted}[frame=single, mathescape]{latex}
  %%%%%%%%%% code %%%%%%%%%%
  % 代码

  % Listing 的设置请参考 http://en.wikibooks.org/wiki/LaTeX/Packages/Listings
  \RequirePackage{listings}
  \lstset{
      backgroundcolor=\color{white},
      basicstyle=\zihao{5}\ttfamily,
      columns=flexible,
      breakatwhitespace=false,
      breaklines=true,
      captionpos=b,
      frame=single,
      numbers=left,
      numbersep=5pt,
      showspaces=false,
      showstringspaces=false,
      showtabs=false,
      stepnumber=1,
      rulecolor=\color{black},
      tabsize=2,
      texcl=true,
      title=\lstname,
      escapeinside={\%*}{*)},
      extendedchars=false,
      mathescape=true,
      xleftmargin=3em,
      xrightmargin=3em,
  }
  \end{minted}
#+end_latex

***** 定理

#+begin_latex
  \begin{minted}[frame=single, mathescape]{latex}
  %%%%%%%%%% theorem %%%%%%%%%%
  % 定理

  \theoremsymbol{\ensuremath{\square}}
  \newtheorem*{proof}{证明}
  \theoremstyle{plain}
  \theoremsymbol{}
  \theoremseparator{：}
  \newtheorem{assumption}{假设}[chapter]
  \newtheorem{definition}{定义}[chapter]
  \newtheorem{proposition}{命题}[chapter]
  \newtheorem{lemma}{引理}[chapter]
  \newtheorem{theorem}{定理}[chapter]
  \newtheorem{axiom}{公理}[chapter]
  \newtheorem{corollary}{推论}[chapter]
  \newtheorem{exercise}{练习}[chapter]
  \newtheorem{example}{例}[chapter]
  \newtheorem{remark}{注释}[chapter]
  \newtheorem{problem}{问题}[chapter]
  \newtheorem{conjecture}{猜想}[chapter]
  \end{minted}
#+end_latex

***** 标题

#+begin_latex
  \begin{minted}[frame=single, mathescape]{latex}
  %%%%%%%%%% caption %%%%%%%%%%
  % 图表标题

  \RequirePackage{caption}
  \DeclareCaptionFormat{bachelorfigure}{\songti\zihao{5}{#1\textrm{#2}#3}}
  \DeclareCaptionFormat{bachelortable}{\heiti\bf\zihao{5}{#1\textrm{#2}#3}}
  \DeclareCaptionFormat{bachelorlstlisting}{\songti\bf\zihao{5}{#1\textrm{#2}#3}}
  \DeclareCaptionFormat{masterfigure}{\bf\songti\zihao{5}{#1\textrm{#2}#3}}
  \DeclareCaptionFormat{mastertable}{\bf\songti\zihao{5}{#1\textrm{#2}#3}}
  \DeclareCaptionFormat{masterlstlisting}{\bf\songti\zihao{5}{#1\textrm{#2}#3}}
  \ifbuaa@bachelor
      \captionsetup[figure]{format=bachelorfigure,labelsep=quad}
      \captionsetup[table]{format=bachelortable,labelsep=quad}
      \captionsetup[lstlisting]{format=bachelorlstlisting,labelsep=quad}
      \renewcommand{\thefigure}{\arabic{chapter}.\arabic{figure}}
      \renewcommand{\thetable}{\arabic{chapter}.\arabic{table}}
      \renewcommand{\theequation}{\arabic{chapter}.\arabic{equation}}
  \else
      \RequirePackage{remreset}
      \@removefromreset{table}{chapter}
      \@removefromreset{figure}{chapter}
      %使图表的标号与章节无关
      \captionsetup[figure]{format=masterfigure,labelsep=quad}
      \captionsetup[table]{format=mastertable,labelsep=quad}
      \captionsetup[lstlisting]{format=masterlstlisting,labelsep=quad}
      \renewcommand{\thefigure}{\arabic{figure}}
      \renewcommand{\thetable}{\arabic{table}}
      \renewcommand{\theequation}{\arabic{chapter}.\arabic{equation}}
  \fi
  \end{minted}
#+end_latex

***** 页码
#+begin_latex
  \begin{minted}[frame=single, mathescape]{latex}
  % 正文前的页码设置位大写罗马数字
  \renewcommand{\frontmatter}{
      \cleardoublepage
      \@mainmatterfalse
      \ifbuaa@bachelor
          \pagenumbering{Roman}
      \else
          \pagenumbering{roman}
      \fi
  }

  % 保证偶数页结束章节
  \newcommand{\clearemptydoublepage}{%
      \clearpage
      \if@twoside
          \ifodd
              \c@page
          \else
              \hbox{}\thispagestyle{empty}\newpage
              \if@twocolumn
                  \hbox{}\newpage
              \fi
          \fi
      \fi
  }
  \end{minted}
#+end_latex

***** 首页
好长！

#+begin_latex
\begin{minted}[frame=single, mathescape]{latex}
% 中文首页
\newcommand{\titlech}{
....
}

% 英文首页
\newcommand{\titleeng}{
....
}
\end{minted}
#+end_latex

***** 摘要
#+begin_latex
% 中文摘要
\begin{minted}[frame=single, mathescape]{latex}
\newenvironment{cabstract}{
...
}

% 英文摘要
\newenvironment{eabstract}{
...
}
\end{minted}
#+end_latex

***** 其它
+ 声明
+ 任务书
+ 授权页
+ 用户信息

**** LaTeX 论文

***** 测试 ctex 和 winfonts 选项

#+BEGIN_SRC latex
\documentclass{article}
\usepackage[winfonts]{ctex}
\begin{document}
中文
\end{document}
#+END_SRC

编译有警告，可以生成 PDF

***** 测试 buaathesis 作为 org latex 文类

1. 配置

   #+BEGIN_SRC emacs-lisp
     (add-to-list 'org-latex-classes
                  '("buaathesis" "\\documentclass{buaathesis}
       [NO-DEFAULT-PACKAGES]
       [NO-PACKAGES]"))
   #+END_SRC

2. 测试 org

   #+BEGIN_SRC org
     ,#+LaTeX_class: buaathesis

     中文
   #+END_SRC

3. 生成 latex

   #+BEGIN_SRC latex
     % Created 2015-12-28 一 10:00
     \documentclass{buaathesis}
     \usepackage[utf8]{inputenc}
     \usepackage[T1]{fontenc}
     \usepackage{fixltx2e}
     \usepackage{graphicx}
     \usepackage{longtable}
     \usepackage{float}
     \usepackage{wrapfig}
     \usepackage{rotating}
     \usepackage[normalem]{ulem}
     \usepackage{amsmath}
     \usepackage{textcomp}
     \usepackage{marvosym}
     \usepackage{wasysym}
     \usepackage{amssymb}
     \usepackage{capt-of}
     \usepackage{hyperref}
     \tolerance=1000
     \usepackage{minted}
     \author{ben}
     \date{\today}
     \title{}
     \hypersetup{
      pdfauthor={ben},
      pdftitle={},
      pdfkeywords={},
      pdfsubject={},
      pdfcreator={Emacs 24.4.1 (Org mode 8.3beta)},
      pdflang={English}}
     \begin{document}

     \tableofcontents

     中文
     \end{document}
   #+END_SRC

4. 分析

   1) 编译 LaTeX 文档，可以生成 PDF，有如下错误(error)

      #+BEGIN_EXAMPLE
        ! LaTeX Error: Option clash for package ulem.
      #+END_EXAMPLE

     原因： ulem宏包选项冲突， org导出的LaTeX文件中默认包含
      =\usepackage[normalem]{ulem}= 与 buaathesis 中设置冲突，注释后无
      错误。

   2) 如何配置 org latex 使其导出的 latex 文件零配置
      - 不默认包含使用各种宏包（OK）
      - 不默认生成目录（手动删除）
      - 不默认生成作者、日期等信息（手动删除）

   3) 导出的标题层次不对, 即 一级标题没有导出为 \chapter

***** 空格

***** 章节条

[[/home/ben/Wally/Journal//Figure/scrot/3959tpl.png]]

#+BEGIN_SRC emacs-lisp
  (add-to-list 'org-latex-classes
               '("buaathesis" "\\documentclass{buaathesis}
    [NO-DEFAULT-PACKAGES]
    [NO-PACKAGES]
    [NO-EXTRA]"
                 ("\\chapter{%s}" . "\\chapter*{%s}")
                 ("\\section{%s}" . "\\section*{%s}")
                 ("\\subsection{%s}" . "\\subsection*{%s}")
                 ))
#+END_SRC
***** 图片
***
***** 论文中如何引用网页

[[/home/ben/Wally/Journal//Figure/scrot/3769ZXh.png]]

[[/home/ben/Wally/Journal//Figure/scrot/3769mhn.png]]

http://tex.stackexchange.com/questions/3587/how-can-i-use-bibtex-to-cite-a-web-page

A simple way of doing it in BibTeX is with a @misc entry:

#+BEGIN_EXAMPLE
@misc{WinNT,
  title = {{MS Windows NT} Kernel Description},
  howpublished = {\url{http://web.archive.org/web/20080207010024/http://www.808multimedia.com/winnt/kernel.htm}},
  note = {Accessed: 2010-09-30}
}
#+END_EXAMPLE

You should also perhaps include an author if you know it. And remember to load a package such as hyperref or url.

If you are using BibLaTeX there is an @online entry type:

#+BEGIN_EXAMPLE
  @online{WinNT,
    author = {MultiMedia LLC},
    title = {{MS Windows NT} Kernel Description},
    year = 1999,
    url = {http://web.archive.org/web/20080207010024/http://www.808multimedia.com/winnt/kernel.htm},
    urldate = {2010-09-30}
  }
#+END_EXAMPLE

#+BEGIN_EXAMPLE
  @misc{ROS,
  title={Robot Operating System},
  howpublished={\url{http://www.ros.org/wiki}},
  note={online}
  }

  @mics{Gazebo,
  title={Gazebo}
  howpublished={\url{http://http://www.gazebosim.org/}},
  note{online}}
#+END_EXAMPLE

**** 参考文献                                             :latex:参考文献:
***** bibtex                                                     :bibtex:
****** 格式

格式如下：
+ 以用{}包含具体内容

  #+BEGIN_EXAMPLE
    @article {name1,
    author = {作者, 多个作者用 and 连接},
    title = {标题},
    journal = {期刊名},
    volume = {卷20},
    number = {页码},
    year = {年份},
    }
#+END_EXAMPLE

+ 也可以直接用双引号“”包含具体内容
  #+BEGIN_EXAMPLE
    @book {name2,
    author ="作者",
    year ="年份2008",
    title ="书名",
    publisher ="出版社名称"
    }
#+END_EXAMPLE

****** bibtex支持的参考文献的条目：

|--------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| Item　       | 说明                                                                                                                                                                                                                                                                      |
|--------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| address      | Publisher's address (usually just the city, but can be the full address for lesser-known publishers)                                                                                                                                                                      |
| annote       | An annotation for annotated bibliography styles                                                                                                                                                                                                                           |
| author       | The name(s) of the author(s) (in the case of more than one author, separated by and )                                                                                                                                                                                     |
| booktitle    | The title of the book, if only part of it is being cited                                                                                                                                                                                                                  |
| chapter      | The chapter number                                                                                                                                                                                                                                                        |
| crossref     | The key of the cross-referenced entry                                                                                                                                                                                                                                     |
| edition      | The edition of a book, long form (such as "first" or "second")                                                                                                                                                                                                            |
| editor       | The name(s) of the editor(s)                                                                                                                                                                                                                                              |
| eprint       | A specification of an electronic publication, often a preprint or a technical report                                                                                                                                                                                      |
| howpublished | How it was published, if the publishing method is nonstandard                                                                                                                                                                                                             |
| institution  | The institution that was involved in the publishing, but not necessarily the publisher                                                                                                                                                                                    |
| journal      | The journal or magazine the work was published in                                                                                                                                                                                                                         |
| key          | A hidden field used for specifying or overriding the alphabetical order of entries (when the "author" and "editor" fields are missing). Note that this is very different from the key (mentioned just after this list) that is used to cite or cross-reference the entry. |
| month        | The month of publication (or, if unpublished, the month of creation)                                                                                                                                                                                                      |
| note         | Miscellaneous extra information                                                                                                                                                                                                                                           |
| number       | The "number" of a journal, magazine, or tech-report, if applicable. (Most publications have a "volume", but no "number" field.)                                                                                                                                           |
| organization | The conference sponsor                                                                                                                                                                                                                                                    |
| pages        | Page numbers, separated either by commas or double-hyphens. For books, the total number of pages.                                                                                                                                                                         |
| publisher    | The publisher's name                                                                                                                                                                                                                                                      |
| school       | The school where the thesis was written                                                                                                                                                                                                                                   |
| series       | The series of books the book was published in (e.g. "The Hardy Boys " or "Lecture Notes in Computer Science ")                                                                                                                                                            |
| title        | The title of the work                                                                                                                                                                                                                                                     |
| type         | The type of tech-report, for example, "Research Note"                                                                                                                                                                                                                     |
| url          | The WWW address                                                                                                                                                                                                                                                           |
| volume       | The volume of a journal or multi-volume book                                                                                                                                                                                                                              |
| year         | The year of publication (or, if unpublished, the year of creation)                                                                                                                                                                                                        |
|--------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|

***** TeX 参考文献
参考:
+ [[https://app.yinxiang.com/shard/s52/nl/11551545/f5d953dd-91d8-4a1c-8dde-df6de5ba4921/?csrfBusterToken%3DU%253Db04339%253AP%253D%252F%253AE%253D1518f3e68f6%253AS%253Df642656b79ac72e805f2499d73c28c2b][LaTeX 对参考文献的管理]]
+ [[http://xb9he.bokee.com/6688578.html][TeX 参考文献]]

****** bibtex

经常写作论文的人都知道，多篇论文可能引用同一篇参考文献。如果每篇论文都
要键入此一文献，不仅费时，也容易犯错。

BibTeX 是 LaTeX 自带的一个辅助程序，启动时自动加载。它可根据文献引用处
出提供的检索名（如 \ cite{Huetal2000}），搜索一个或多个文献数据库，然后
在文件末尾创建参考文献。如果以后编写其它文件用到相同的参考文献时还可调
用这些文献数据库。图为 BibTeX 的徽标。

[[/home/ben/Wally/Journal/Figure/1503022216.png]]

可通过命令

#+BEGIN_EXAMPLE
  \bibliography{文献数据库名}
  \bibliographystyle{选项}
#+END_EXAMPLE

****** 标准选项
预先设置要检索的文献数据库以及文献引用与文献列表的样式，LaTeX 标准选项
及其样式共有以下8种：

******* plain，按字母的顺序排列，比较次序为作者、年度和标题：
[[~/Wally/Journal/Figure/1503022216-2.png]]

******* unsrt，样式同plain，只是按照引用的先后排序：
[[~/Wally/Journal/Figure/1503022216-3.png]]

******* alpha，用作者名首字母+年份后两位作标号，以字母顺序排序：
[[~/Wally/Journal/Figure/1503022216-4.png]]

******* abbrv，类似plain，将月份全拼改为缩写，更显紧凑：
[[~/Wally/Journal/Figure/1503022216-5.png]]

******* ieeetr，国际电气电子工程师协会期刊样式：
[[~/Wally/Journal/Figure/1503022216-6.png]]

******* acm，美国计算机学会期刊样式：
[[~/Wally/Journal/Figure/1503022216-7.png]]

******* siam，美国工业和应用数学学会期刊样式：
[[~/Wally/Journal/Figure/1503022216-8.png]]

******* apalike，美国心理学学会期刊样式：
[[~/Wally/Journal/Figure/1503022216-9.png]]

文献数据库可根据要求自行编写，其格式有：文章、书籍、技术报告、会议论文
集和博士论文等十几种，每种格式都有一些必填和选填的项目，如作者、标题、
出版社、发表年度、...等等，最后存储为 .bib 文件。

如果对生成的参考文献样式仍有不满意之处，还可将编译信息文件*.bbl 中的参
考文献列表源程序拷贝到论文尾部，然后进行手工调整。

****** bib文件
可以维护一个 bib 文件，在你的整个研究生涯可以只维护这样一个文件，就象
一个数据库，每个参考文献是一个记录，由一个唯一的 ID （例如下面的
MartinDSP00）描述。

比如我的 myreference.bib 文件里一条典型的文献是这样的：
#+BEGIN_EXAMPLE
  @article{MartinDSP00,
       author = "A. Martin and M. Przybocki",
       title = "The {NIST} 1999 speaker recognition evaluation --- an overview",

       journal = "Digital Signal Processing",
       volume = "10",
       pages = "1--18",
       year = "2000",}
#+END_EXAMPLE

其中 {NIST} 中的大括号不会被显示，它的作用是保证将来的生成的参考文献中
NIST 四个字保持原样，不会被小写。

****** 文献库引用

 需要引用文献的时候，在正文里加入：
 #+BEGIN_EXAMPLE
   \bibliographystyle{ieeetr}
   \bibliography{myreference}
 #+END_EXAMPLE

注:  /在正文中使用,而非导言中,一般放在tex文件尾部,在此生成参考文献/

就可以用 *cite{}* 来引用文献库中的论文了，如 cite{MartinDSP00}。上面第
一行是控制文献显示格式的，这个后面再讲。此时，myreference.bib 文件在正
文tex 文件的同一目录下，以保证 LaTeX 可以找到该 bib 文件。

****** 编译

BibTeX 提供了一个外部的 BibTeX 工具程序，源文件经过 LaTeX 编译后，还要
使用BibTeX 对数据库文件编译一次，最后再用 LaTeX 连续编译两遍，才能得到
正确结果。 可用下图解释这四个编译步骤的作用：

[[~/Wally/Journal/Figure/1503022216-A.png]]

1) 编译正文，生成 aux 文件
2) 然后用 bibtex 在当前目录生成 bbl 文件
3) 再编译正文两次，完整的 dvi 就生成了。

这样，LaTeX 保证了所有用 cite 引用到的文献都已被列出，并且自动编号。同
时，如果没有用ocite 命令，LaTeX 还保证所有列出的参考文献都在正文中得到
了引用。

****** bib 文件维护

*bib 文件把 @ 所定义的 entry 之外的所有东西看作是注释。* 比如在上面
@article 的例子里，如果我在大括号之外写些东西的话，bibtex 是不会关心的，
就当它不存在。所以可以把文献的关键字写在这里，将来通过搜索关键字来查找
某些文献。

*更好的选择是使用ORG-MODE进行管理bib文件*

其实也可以搞一个临时的LaTeX 文件，使用ocite{*} 命令，然后编译成 dvi，
这样就得到了一个 bib 文件中所有参考文献的列表，当然是可以按照作者名字
排序的。

另外，很多 journal（学术期刊）或者 booktitle（国际会议）都是重复的，为
了规范化，可以定义缩写，如
#+BEGIN_EXAMPLE
  @string(ICASSP = "Proc. of the International Conference on Acoustics,
          Speech,and Signal Processing (ICASSP)")
#+END_EXAMPLE

这样在执行 bibtex 之后，ICASSP 会被替换成它的全称。
#+BEGIN_EXAMPLE
  @conference{QL.ICA98,
       author = "Qi Li and Biing-Hwang Juang",
       title   = "Speaker Verification Using Verbal Information Verification for Automatic Enrollment",
       booktitle = ICASSP,
       year = "1998",}
#+END_EXAMPLE

****** bib 中的中文文献

中文文献和英文的格式不同，并且使用全角的标点符号，有一点难办。我的解决
办法是这样的：

#+BEGIN_EXAMPLE
  @misc{Xie.1995,
        note = "谢锦辉，《隐 {Markov} 模型及其在语音处理中的应用》，华中理工大学出版社，1995年4月",
        key = "Xie",}

#+END_EXAMPLE

唯一的缺陷是参考文献中最后是以英文的 "." 而不是 "。" 结束的。还好我的

中文文献不多，无伤大雅，否则就 *手工修改一下 bbl 文件* 吧。

****** 关于参考文献的显示格式、排序，及其他

是通过一些 *bst* 文件来控制的。而使用哪种 bst 格式，可通
过 *bibliographystyle* 命令控制。LaTeX 默认提供了这么几种格式，如：
plain、alpha、unsrt。具体意义见相关文档，这些bst 在 texmf/ibtex/st/ase
可被找到。

bst 控制的格式非常细致

+ 排序方式
  - 以正文中引用顺序排序
  - 以文献第一作者的 last name 排序
+ 引用序号是 LaTeX 提供的 ID 还是数字的
+ 作者名字是否用缩写
+ 作者名字放在文献的起始还是结束
+ 文章 title 要不要大小写（即 "Speaker Verification Using ..." 还是 "Speaker verification using "）
+ title 用什么区分（用不用引号括起来，用不用斜体等）
+ 刊物名字的格式（要不要全部大写，要不要粗体，要不要斜体，要不要括起来）
  等等等等。

打开 bst 文件看一下就知道，绝对是想要什么形式，就可以得到什么形式。最
关键的是，在文章定稿之后，完全可以用几个命令重新定义参考文献的格式！

****** 如何定制参考文献的显示格式

其实 bst 文件有很多，总能找到自己需要的。如果这些还不能满足，可以通过
生成自己的 bst 文件来定制。这有两个方法，第一是手写（反正我是写不出来），
第二是通过工具。 *custom-bib* 是一个定制 bst 文件的包，解压缩后用 LaTeX
编译其中的主 tex 文件，便会进行交互式的 bst 定制过程，具体过程我就不讲
了。把生成的自定义的 bst 放到 LaTeX 相应目录下，刷新文件名数据库就可以
使用了。

***** LaTeX 参考文献

****** 参考文献
******* What

参考文献是作者在从事科学研究过程中和在撰写论文中,直接或间接使用他人科
研成果或引用他人学术论著而做的标记.参考文献的内容包括专著及其析出文献,
连续出版物及其析出文献,专利文献和电子文献等文献资料信息.

******* 位置

正文之后,索引之前.

******* 意义

+ 体现科学技术的发展历程及其继承性
+ 尊重和保护他人的著作权
+ 简化论述,缩短论文篇幅
+ 指明理论依据
+ 与读者共享相关信息资源

****** 参考文献环境

标准文类book等都提供可以排版参考文献的 *thebibliography* 的 *列表*环
境, 及在该环境中使用的 *\textbackslash{}bibitem* 文献 *条目* 命令.

#+BEGIN_EXAMPLE
  \begin{thebibliography}{最大序号}
  \bibitem[文献序号]{检索名} 文献信息
    ...
  \end{thebibliography}
#+END_EXAMPLE

参数说明:
+ 最大序号: 测定文献序号最大宽度,通常一位用9,两位用99
+ 文献序号: 可选参数,自行设定文献序号,通常省略
+ 检索名: 正文中 *\textbackslash{}label* 引用文献的唯一标识
+ 文献信息:

注: 不同文类
+ book/report: 使用章命令 \textbackslash{}chapter* 创建以 *Bibliography* 为标题的一章
+ article: 使用节命令 \textbackslash{}section* 生成以 *Reference* 为题的一节

建议: *为了便于记忆和防止混淆,通常采用作者姓氏加上出版年份的后两位作为*
*每个参考文献的检索名.* 如Lamport98

****** 参考文献的引用

如果要在正文中引用参考文献列表中的文献时,可丰引文之后使用 *文献引用命
令 \textbackslash{}cite*

#+BEGIN_EXAMPLE
  \cite[附加信息]{检索名1,检索名2,...}
#+END_EXAMPLE

参考文献的引用也是一种 *交叉引用*, 源文件需多次编译.

****** 引用格式的修改

宏包: *cite*
#+BEGIN_EXAMPLE
  \usepackage[格式]{cite}
#+END_EXAMPLE

****** 文献信息分段

启用文类的 *openlib* 选项.
文献棩中使用 *\newblock* 命令.

***** [[http://purpletulipdyc.blog.sohu.com/259698858.html][引用多个参考文献]]

如果在文章中出现连续引用多个参考文献的情况，希望显示的格式为 [1-9].在
文章的导言区加

#+BEGIN_SRC latex
\usepackage{cite}
#+END_SRC

在文章正文中需要引用参考文献的地方使用：

#+BEGIN_SRC latex
\cite{liu2012, wen13,wang2010VTC,shen2008ICC,Alex2007ICC}
#+END_SRC

***** 不要使用 org-mode 维护 bib 文件

error

#+BEGIN_EXAMPLE
I couldn't open database file /home/ben/Wally/GraduationProject/Thesis/literature.org.bib
#+END_EXAMPLE

***** [[https://app.yinxiang.com/SetAuthToken.action?auth=S%3Ds52%3AU%3Db04339%3AE%3D151a0dccd97%3AC%3D151a0a5df17%3AP%3D195%3AA%3Den-chrome-clipper-xauth-new%3AV%3D2%3AH%3D5522a9e07f0c5aab83cf036e36eb2457&targetUrl=%2Fshard%2Fs52%2Fnl%2F11551545%2F2208e3d2-a67b-4620-bc54-855bfaaf5192%2F][引用参考文献时使用上标]]

1. 默认情况下 LaTeX 不使用上标

   [[/home/ben/Wally/Journal/Figure/scrot/24567oOO.png]]

2. /cite/ 宏包的 /superscript/ 选项

   #+begin_latex
     \begin{minted}[frame=leftline, mathescape]{latex}
     \usepackage[superscript]{cite}
     \end{minted}
   #+end_latex

   [[/home/ben/Wally/Journal/Figure/scrot/24567c3m.png]]

   没有使用方括号

3. 修改 sty 文件

4. 解决 /BUAAthesis模板中定义得很好/

** TAGERILL
*** model

1. joint类型为continuous时，显示wheel与base的transform出错，改成fixed则没
   有问题，why?

   continuous 类型joint需要joint_state_publisher发布
   joint_states(sensor_msgs/JointState)

   开启节点： <node name="joint_state_publisher"
   pkg="joint_state_publisher" type="joint_state_publisher" />

   pub: JointState

2. package: robot_state_publisher node: state_publisher ?
   *robot_state_publisher*

*** move_control
**** TODO kobuki.launch.xml  control部分

+ kobuki.launch.xml  control部分
  #+BEGIN_SRC xml
    <launch>
      <arg name="base"/>
      <arg name="stacks"/>
      <arg name="3d_sensor"/>

      <!-- <arg name="urdf_file" default="$(find xacro)/xacro.py '$(find turtlebot_description)/robots/$(arg base)_$(arg stacks)_$(arg 3d_sensor).urdf.xacro'" /> -->
      <arg name="urdf_file" default="$(find xacro)/xacro.py '$(find turtlebot_description)/robots/kobuki_hexagons_kinect.urdf.xacro'" />
      <param name="robot_description" command="$(arg urdf_file)" />

      <!-- Gazebo model spawner -->
      <node name="spawn_turtlebot_model" pkg="gazebo_ros" type="spawn_model"
            args="$(optenv ROBOT_INITIAL_POSE) -unpause -urdf -param robot_description -model mobile_base"/>

      <!-- Velocity muxer -->
      <node pkg="nodelet" type="nodelet" name="mobile_base_nodelet_manager" args="manager"/>
      <node pkg="nodelet" type="nodelet" name="cmd_vel_mux"
            args="load yocs_cmd_vel_mux/CmdVelMuxNodelet mobile_base_nodelet_manager">
        <param name="yaml_cfg_file" value="$(find turtlebot_bringup)/param/mux.yaml" />
        <remap from="cmd_vel_mux/output" to="mobile_base/commands/velocity"/>
      </node>

      <!-- Bumper/cliff to pointcloud (not working, as it needs sensors/core messages) -->
      <include file="$(find turtlebot_bringup)/launch/includes/kobuki/bumper2pc.launch.xml"/>
    </launch>

  #+END_SRC

+ kobuki gazebo
  #+BEGIN_SRC xml
    <gazebo>
      <plugin name="kobuki_controller" filename="libgazebo_ros_kobuki.so">
        <publish_tf>1</publish_tf>
        <left_wheel_joint_name>wheel_left_joint</left_wheel_joint_name>
        <right_wheel_joint_name>wheel_right_joint</right_wheel_joint_name>
        <wheel_separation>.230</wheel_separation>
        <wheel_diameter>0.070</wheel_diameter>
        <torque>1.0</torque>
        <velocity_command_timeout>0.6</velocity_command_timeout>
        <cliff_sensor_left_name>cliff_sensor_left</cliff_sensor_left_name>
        <cliff_sensor_center_name>cliff_sensor_front</cliff_sensor_center_name>
        <cliff_sensor_right_name>cliff_sensor_right</cliff_sensor_right_name>
        <cliff_detection_threshold>0.04</cliff_detection_threshold>
        <bumper_name>bumpers</bumper_name>
        <imu_name>imu</imu_name>
      </plugin>
    </gazebo>
  #+END_SRC

  - 位置：.ckws/devel/lib/libgazebo_ros_kobuki.so
**** 先研究ros_control, 再琢磨自己写控制lib

*** gmapping
+ turtlebot_gazebo gmapping_demo.launch
  #+BEGIN_SRC xml
  <launch>
    <include file="$(find turtlebot_navigation)/launch/includes/gmapping.launch.xml"/>
  </launch>
  #+END_SRC

+ turtlebot_navigation gmapping.launch.xml
  #+BEGIN_SRC xml
      <launch>
      <arg name="scan_topic"  default="scan" />
      <arg name="base_frame"  default="base_footprint"/>
      <arg name="odom_frame"  default="odom"/>

      <node pkg="gmapping" type="slam_gmapping" name="slam_gmapping" output="screen">
        <param name="base_frame" value="$(arg base_frame)"/>
        <param name="odom_frame" value="$(arg odom_frame)"/>
        <param name="map_update_interval" value="5.0"/>
        <param name="maxUrange" value="6.0"/>
        <param name="maxRange" value="8.0"/>
        <param name="sigma" value="0.05"/>
        <param name="kernelSize" value="1"/>
        <param name="lstep" value="0.05"/>
        <param name="astep" value="0.05"/>
        <param name="iterations" value="5"/>
        <param name="lsigma" value="0.075"/>
        <param name="ogain" value="3.0"/>
        <param name="lskip" value="0"/>
        <param name="minimumScore" value="200"/>
        <param name="srr" value="0.01"/>
        <param name="srt" value="0.02"/>
        <param name="str" value="0.01"/>
        <param name="stt" value="0.02"/>
        <param name="linearUpdate" value="0.5"/>
        <param name="angularUpdate" value="0.436"/>
        <param name="temporalUpdate" value="-1.0"/>
        <param name="resampleThreshold" value="0.5"/>
        <param name="particles" value="80"/>
      <!--
        <param name="xmin" value="-50.0"/>
        <param name="ymin" value="-50.0"/>
        <param name="xmax" value="50.0"/>
        <param name="ymax" value="50.0"/>
      make the starting size small for the benefit of the Android client's memory...
      -->
        <param name="xmin" value="-1.0"/>
        <param name="ymin" value="-1.0"/>
        <param name="xmax" value="1.0"/>
        <param name="ymax" value="1.0"/>

        <param name="delta" value="0.05"/>
        <param name="llsamplerange" value="0.01"/>
        <param name="llsamplestep" value="0.01"/>
        <param name="lasamplerange" value="0.005"/>
        <param name="lasamplestep" value="0.005"/>
        <remap from="scan" to="$(arg scan_topic)"/>
      </node>
    </launch>

  #+END_SRC

*** rviz error

自己配置的rviz不但模型不是平面的，而且不会动

使用别人的，这两个问题同时得到了解决。

原因是没有 Listen tf

*** 增加 pan-and-tilt
*** 关于display.launch

#+BEGIN_SRC xml
  <launch>
          <arg name="model" default="$(find xacro)/xacro.py '$(find tagerill_description)/urdf/tagerill.urdf.xacro'"/>
          <arg name="gui" default="False" />
          <param name="robot_description" command="$(arg model)" />
          <param name="use_gui" value="$(arg gui)"/>
          <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
          <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher" />
          <node name="rviz" pkg="rviz" type="rviz" args="-d $(find tagerill_description)/rviz/urdf.rviz" required="true" />
  </launch>
#+END_SRC

Note1: 有时在其它roslaunch中修改了某些ros param, 可能会使模型加载失败

*** kinect

**** 目标

1. 学会在仿真中使用Kinect
   1) 建立urdf模型，并使用rviz显示出来
   2) 在Gazebo中仿真并与ROS通信

2. 测试 depthimage_to_laserscan 以及 nodelet

*** 新的模型 *Holonomic*
**** ROS answer: Holonomic mobile base using Gazebo
+
  http://answers.ros.org/question/30629/holonomic-mobile-base-using-gazebo/


The base platform containing of four wheels, each wheel has 2 degrees
of freedom. It is a holonomic wheel base. There are two motors
connected to each wheel, one is used for steering and the other is
used for driving. The wheel is no deformable planar circle
type. Therefore, each wheel has the capability of steering and driving
independently.


From what I understand, this is the same configuration used by the PR2
and the Care-O-Bot. You can therefore have a look at these packages
for inspiration/reference.

PR2 VS Care-O-Bot: Of course,  *PR2*.

*** Mecanum

**** how

https://github.com/micpalmia/youbot_ros_tools/issues/5

It's a really interesting simulation issue.

First of all, let's a look at the wheels. They are not standard
wheels, they are mecanum wheels. This kind of wheels help the robot to
move and rotate easily in any directions, even in congested area. The
movement come from the resulting rotation speeds of the wheels, which
are independent. I have found I nice explanation of the relationship
between the wheels rotation and the resulting movement on this lego
page. On the videos, the youBot looks like gliding on the ground.

From a design point of view, this is convenient, because it is similar
to a planar joint + a revolute joint between the base and the
ground. Very easy to control.

From a simulation point of view, it is a nightmare.

I doubt that the repo from youBot or WPI-RAIL did the job, because
they involve casters. And there is no casters on the real KUKA
youBot. If you have a look at their teleop program, you will see that
this program align the wheels before the rotation, which is not the
design of a mecanum wheel at all. With the mesh of the wheels, you
will see it. This not natural (this is also why the wheels solid shape
is a sphere). And even worst, the the rotation is therefore not
supported. So for me, this model is really poor.

I raised the question on Gazebo answers. Someone suggested to use this
planar controller. I considered it as a second choice, but finally,
this is very close to the behavior of the real mecanum wheels, as you
define the x/y velocity and rotation, which can be directly linked to
the wheel individual speeds. I have remove the friction between the
wheels and the ground.

On the real robot, this x/y speed and rotation translation to
individual wheels speeds would also be very convenient.

A visually better solution would be to add the mesh of the wheels, and
rotate them according to the planar messages. No time to work on this.

Finally, if you are looking for a very physical solution, I have found
this link, where it has been done in another simulator, by mixing
kinematics and dynamics solutions.

That would be really great to have more realistic solution. For my
requirement, the planar controller is enough.

*** [pcl::SampleConsensusModelPlane::optimizeModelCoefficients] Not enough inliers found to support a model (0)! Returning the same coefficients.
+
  http://answers.ros.org/question/30909/problem-with-feeding-pointcloud2-messages-from-swissranger-4000-to-octomap-server/


Do you actually need the built-in ground plane filter? For mere map
building there's usually no need and you can set the parameter
~filter_ground to false. By default (in the latest version of
octomap_server), it should be false.

Otherwise you usually need to adjust the PCL plane detection
parameters to your sensor, it is currently tuned to the PR2's stereo
camera by default. Best have a look at the code, not all parameters
are explained on the wiki site in detail.

** wally

#+INCLUDE: ~/Wally/Project/catkin_ws/src/wally/README.md
#+INCLUDE: ~/Wally/Project/catkin_ws/src/wally/ChangeLog.org

*** TODOs

**** map merge

http://answers.ros.org/question/133486/how-can-i-merge-some-maps/
http://wiki.ros.org/map_merger
http://answers.ros.org/question/187855/connecting-maps/

*** wally stack

#+INCLUDE: ~/Wally/Project/catkin_ws/src/wally/wally/CMakeLists.txt :src cmake
#+INCLUDE: ~/Wally/Project/catkin_ws/src/wally/wally/package.xml :src xml

*** wally_description
**** package

#+INCLUDE: ~/Wally/Project/catkin_ws/src/wally/wally_description/CMakeLists.txt :src cmake
#+INCLUDE: ~/Wally/Project/catkin_ws/src/wally/wally_description/package.xml :src xml

**** wally.xacro

#+INCLUDE: ~/Wally/Project/catkin_ws/src/wally/wally_description/urdf/wally.xacro :src xml

**** display.launch

#+INCLUDE: ~/Wally/Project/catkin_ws/src/wally/wally_description/launch/display.launch :src xml

***** 测试 node 标签的 doc 属性，进行文档化工作

#+BEGIN_EXAMPLE
  test $ roslaunch --ros-args wally_description display.launch
  Optional Arguments:
    gui (default "false"): undocumented
    model (default "/opt/ros/indigo/share/xacro/xacro.py /home/ben/Wally/Project/catkin_ws/src/wally/wally_description/urdf/wally.xacro"): undocumented
    xacro (default "/home/ben/Wally/Project/catkin_ws/src/wally/wally_description/urdf/wally.xacro"): xacro文件， default '/home/ben/Wally/Project/catkin_ws/src/wally/wally_description/urdf/wally.xacro'

#+END_EXAMPLE

***** 测试 node 标签中的 required 属性

#+BEGIN_EXAMPLE
  test $ rosnode list
  /joint_state_publisher
  /robot_state_publisher
  /rosout
  /rviz
  test $ rosnode kill rviz
  killing /rviz
  killed
  test $ rosnode list
  /rosout
#+END_EXAMPLE

#+BEGIN_EXAMPLE
  ================================================================================
  REQUIRED process [rviz-3] has died!
  process has finished cleanly
  log file: /home/ben/.ros/log/466aa446-9439-11e5-bfff-002186ef9d91/rviz-3*.log
  Initiating shutdown!
  ================================================================================

#+END_EXAMPLE

***** 测试 display 是否对 hokuyo.xacro [嵌套的层不要太多]

失败，hokuyo.xacro本身不会生成完整的urdf文件，除非指定参数alpha为true
*** wally_bringup

**** package
#+INCLUDE: ~/Wally/Project/catkin_ws/src/wally/wally_bringup/CMakeLists.txt :src cmake
#+INCLUDE: ~/Wally/Project/catkin_ws/src/wally/wally_bringup/package.xml :src xml

*** wally_gazebo
**** package

#+INCLUDE: ~/Wally/Project/catkin_ws/src/wally/wally_gazebo/CMakeLists.txt :src cmake
#+INCLUDE: ~/Wally/Project/catkin_ws/src/wally/wally_gazebo/package.xml :src xml

**** wally_gazebo.launch

#+INCLUDE: ~/Wally/Project/catkin_ws/src/wally/wally_gazebo/launch/wally_gazebo.launch :src xml

*** wally_launch
**** package

#+INCLUDE: ~/Wally/Project/catkin_ws/src/wally/wally_launch/CMakeLists.txt :src cmake
#+INCLUDE: ~/Wally/Project/catkin_ws/src/wally/wally_launch/package.xml :src xml

**** nav

***** move_base

#+INCLUDE: ~/Wally/Project/catkin_ws/src/wally/wally_launch/launch/move_base.launch :src xml

****** TODO configs <参数含义>

#+INCLUDE: ~/Wally/Project/catkin_ws/src/wally/wally_launch/config/base_local_planner_params.yaml :src yaml

#+INCLUDE: ~/Wally/Project/catkin_ws/src/wally/wally_launch/config/costmap_common_params.yaml :src yaml

#+INCLUDE: ~/Wally/Project/catkin_ws/src/wally/wally_launch/config/global_costmap_params.yaml :src yaml

#+INCLUDE: ~/Wally/Project/catkin_ws/src/wally/wally_launch/config/local_costmap_params.yaml :src yaml

#+INCLUDE: ~/Wally/Project/catkin_ws/src/wally/wally_launch/config/nav_obstacles_params.yaml :src yaml

**** wally.launch
#+INCLUDE: ~/Wally/Project/catkin_ws/src/wally/wally_launch/launch/wally.launch :src xml
**** gmapping.launch

#+INCLUDE: ~/Wally/Project/catkin_ws/src/wally/wally_launch/launch/gmapping.launch :src xml

**** sim.launch

#+INCLUDE: ~/Wally/Project/catkin_ws/src/wally/wally_launch/launch/sim.launch :src xml

**** DONE filter.launch
- State "DONE"       from "NEXT"       [2016-01-05 二 14:31] \\
  ok了，在解决 laser_assembler 问题的同时找到了 filters 的答案，原因在于 clock
- State "NEXT"       from ""           [2016-01-01 五 16:42] \\
  laser_filter 还是存在问题！！!
  先不管它。

#+INCLUDE: ~/Wally/Project/catkin_ws/src/wally/wally_launch/launch/laser_filter.launch :src xml

*scan_to_scan_filter_chain*

*scan_to_cloud_filter_chain*

filters

- LaserArrayFilter
- [X] LaserIntensityFilter
- [X] ScanShadowsFilter
- [X] InterpolationFilter
- [X] LaserScanRangeFilter


laser_filters 的源码编译问题再重新安装系统后解决。问题并不在于 catkin
的配置问题，而是系统库的问题。

**** laser_assembler.launch

#+INCLUDE: ~/Wally/Project/catkin_ws/src/wally/wally_launch/launch/laser_assembler.launch :src xml


***** laser_assembler_pointcloud

#+include: ~/Wally/Project/catkin_ws/src/wally/wally_launch/src/laser_assembler_pointcloud2.cpp

1. call laser_assembler service:

   #+BEGIN_SRC cpp
      AssembleScans srv;
     srv.request.begin = e.last_real;
     srv.request.end = e.current_real;

     if(client_.call(srv)){
       // ROS_INFO("Published Cloud with %u points", (uint32_t)(srv.response.cloud.points.size()));
       pub_.publish(srv.response.cloud);
      }
   #+END_SRC

2. 周期性地发布点去消息（时间驱动）

   #+BEGIN_SRC cpp
     timer_ = n_.createTimer(ros::Duration(15, 0), &PeriodicSnapshotter::timerCallback, this);
   #+END_SRC

***** pointcloud & pointcloud2

sensor_msgs/PointCloud.msg

#+BEGIN_EXAMPLE
  std_msgs/Header header
  geometry_msgs/Point32[] points
  sensor_msgs/ChannelFloat32[] channels
#+END_EXAMPLE

sensor_msgs/PointCloud2.msg
#+BEGIN_EXAMPLE
  std_msgs/Header header
  uint32 height
  uint32 width
  sensor_msgs/PointField[] fields
  bool is_bigendian
  uint32 point_step
  uint32 row_step
  uint8[] data
  bool is_dense
#+END_EXAMPLE

***** 使用 rosbag play 时产生 warnning

#+BEGIN_EXAMPLE
  Warning: TF_OLD_DATA ignoring data from the past for frame
  microstrain_link at time 1.45181e+09 according to authority
  unknown_publisher
#+END_EXAMPLE

Q&A [[http://answers.ros.org/question/201948/tf_old_data-ignoring-data-from-the-past-for-frame-odom/][TF_OLD_DATA ignoring data from the past for frame odom]]


_The error messages suggest you're running with simulated time_. Make
sure that you've set the flag to make sure the whole system is using
simulated time by setting the parameter *use_sim_time* before you
start any nodes.

#+BEGIN_EXAMPLE
rosparam set use_sim_time true
#+END_EXAMPLE

***** 不用使用 laser_assembler 对进行可视化，更好的方式是修改 rviz 中 laser_scan 的 *Queue Size*

1. Queue Size 设置太大，会占用太多的内存，导致电脑卡
2. 配合设置 Color 和 Alpha 可视化效果简直棒极了
3. 不要实时地使用

*不是缓存 Queue size 而是 rosbag play --clock 选项*

***** laser_assembler 用来组合 scan 到 固定坐标系map 下

1. 可以配合 service call 实时地显示建模效果，但要合理地设置时间
2. 最好用来做一些后续的非实时的处理

***** PCL

1. [X] 保存 cloudpiont2 为 bag

   laser_assembler + service call

2. [X] 转换为 PCD

   #+BEGIN_EXAMPLE
     rosrun pcl_ros bag_to_pcd pointcloud2_0106.bag /assembled_pointcloud2 pcds/
   #+END_EXAMPLE

   data/pcds

3. [ ] 组合 PCD

   http://pointclouds.org/documentation/tutorials/concatenate_clouds.php

4. [X] 处理 PCD downsample

   #+INCLUDE: ~/Wally/Project/catkin_ws/src/wally/wally_launch/src/voxel_grid.cpp

**** hector_mapping.launch

#+INCLUDE: ~/Wally/Project/catkin_ws/src/wally/wally_launch/launch/hector_mapping.launch :src xml

**** Hector SLAM 的 Map/odom/base_footprint 的配置问题

***** 问题描述

1) odom 由谁发布？
2) map 与 odom 之间的关联

[[/home/ben/Wally/Journal//Figure/scrot/2959IZS.png]]

[[/home/ben/Wally/Journal//Figure/scrot/2959VjY.png]]

***** solution 1

http://wiki.ros.org/hector_slam/Tutorials/SettingUpForYourRobot

The system can also be used without broadcasting any tf
transformation. This can be useful if another node is responsible for
publishing the map->odom or map->base_frame transform.

In this case, the estimated pose published on the poseupdate topic of
hector_mapping might be used for example by a INS system which then
publishes a map->base_frame transform.


#+BEGIN_EXAMPLE
  <arg name="odom_frame" default="odom"/>
  <arg name="pub_map_odom_transform" default="true"/>
#+END_EXAMPLE

***** error

#+BEGIN_EXAMPLE
[ERROR] [1451717998.212424627, 25.216000000]: Transform failed during
publishing of map_odom transform: "odom" passed to lookupTransform
argument target_frame does not exist.

[ERROR] [1451717998.830369203, 25.762000000]: Transform failed during
publishing of map_odom transform: Lookup would require extrapolation
at time 24.721000000, but only time 24.637000000 is in the buffer,
when looking up transform from frame [base_footprint] to frame [odom]
#+END_EXAMPLE

不存在 odom ???


#+BEGIN_EXAMPLE
~ $ rosnode info /hector_mapping
--------------------------------------------------------------------------------
Node [/hector_mapping]
Publications:
 * /map_metadata [nav_msgs/MapMetaData]
 * /slam_cloud [sensor_msgs/PointCloud]
 * /rosout [rosgraph_msgs/Log]
 * /tf [tf2_msgs/TFMessage]
 * /poseupdate [geometry_msgs/PoseWithCovarianceStamped]
 * /map [nav_msgs/OccupancyGrid]
 * /slam_out_pose [geometry_msgs/PoseStamped]

Subscriptions:
 * /syscommand [unknown type]
 * /tf_static [unknown type]
 * /initialpose [unknown type]
 * /tf [tf2_msgs/TFMessage]
 * /lidar_scan [unknown type]

Services:
 * /hector_mapping/set_logger_level
 * /hector_mapping/get_loggers
 * /dynamic_map

#+END_EXAMPLE


也就是说不存在 Odom 坐标系

***** use_sim_time?

Tells ROS nodes asking for time to get the Gazebo-published simulation
time, published over the ROS topic /clock (default true)

#+BEGIN_EXAMPLE
Warning: TF_OLD_DATA ignoring data from the past for frame base_footprint at time 35.174 according to authority unknown_publisher
Possible reasons are listed at http://wiki.ros.org/tf/Errors%20explained
at line 260 in /tmp/buildd/ros-indigo-tf2-0.5.9-0trusty-20150326-1908/
#+END_EXAMPLE

***** 解决 通过 base_stablized 配置

[[/home/ben/Wally/Journal//Figure/scrot/2959AUv.png]]

***** 配合使用 plannar-move 有新的问题

**** gazbo world

- http://jderobot.org/Teaching_robotics_with_jderobot

**** robot_description setting for rosbag

#+INCLUDE: ~/Wally/Project/catkin_ws/src/wally/wally_launch/launch/robot_description.launch :src xml


**** usb_cam

#+INCLUDE: ~/Wally/Project/catkin_ws/src/wally/wally_launch/launch/usb_cam.launch :src xml


format: *uyvy*

rate: 30, OK

io_method: mmap

pixel_format:
- mjpeg
  #+BEGIN_EXAMPLE
   Webcam: expected picture but didn't get it...
  #+END_EXAMPLE
- 之后再设置为 yuyv 正常了


使用 rviz 和 image_view 显示的都是偏 红和绿 ？？？

- contrast 不是


** Julie

#+INCLUDE: ~/Wally/Project/catkin_ws/src/julie/README.md
#+INCLUDE: ~/Wally/Project/catkin_ws/src/julie/ChangeLog.org

*** Thoughts on ROS
+ 不一定非要以源码方式安装package, *只有需要深入研究并借鉴的才使用源码
  安装* -> 精简
*** Problems
**** TODO 编译 gazebo_ros_package 失败
‘Q_WS_WIN’ was not declared in this scope

TODO 暂时不管
*** Stack: Julie
*** Metapackage                                               :metapackage:

[2015-11-24 周2 19:09]

#+INCLUDE: ~/Wally/Project/catkin_ws/src/julie/julie/package.xml :src xml :lines "9-"

元包(Metapackage)是一种特殊的包，它不包含任何代码、文件或其它常见的条
目。它仅仅是简单的引用一个或几个相关松散耦合的包。

It is often convenient to group multiple packages as a single logical
package. This can be accomplished through metapackages. A metapackage
is a normal package with the following export tag in the package.xml:
*<metapackage />*

#+begin_latex
\begin{minted}[frame=single, mathescape]{xml}
 <export>
   <metapackage />
 </export>
\end{minted}
#+end_latex

Other than a required <buildtool_depends> dependency on catkin,
metapackages can only have run dependencies on packages of which they
group.

Additionally a metapackage has a required, boilerplate CMakeLists.txt
file: *catkin_metapackage()*

#+begin_latex
\begin{minted}[frame=single, mathescape]{xml}
cmake_minimum_required(VERSION 2.8.3)
project(<PACKAGE_NAME>)
find_package(catkin REQUIRED)
catkin_metapackage()
\end{minted}
#+end_latex
Note: replace <PACKAGE_NAME> with the name of the metapackage.

boilerplate: 样板，所谓样板，是指一尘不变，使用catkin_create_package命
令生成的CMakeLists.txt文件会有 *多余* 的配置，导致编译时失败。

/This workspace contains non-catkin packages in it, and catkin cannot build  a non-homogeneous workspace without isolation.  Try the 'catkin_make_isolated' command instead./

*** julie_bringup

*** julie_description
CLOCK: [2015-11-25 三 14:39]--[2015-11-25 三 14:49] =>  0:10

**** package management
#+INCLUDE: ~/Wally/Project/catkin_ws/src/julie/julie_description/package.xml :src xml
#+INCLUDE: ~/Wally/Project/catkin_ws/src/julie/julie_description/CMakeLists.txt :src cmake


***** 手记                                                       :catkin:
使用 catkin_create_pkgs 命令生成的 package 配置文件中除基本信息外，添
加了以下信息

1. package.xml 中的 *find_package()*
   #+begin_latex
     \begin{minted}[frame=single, mathescape]{cmake}
       find_package(catkin REQUIRED COMPONENTS
         tf
         urdf
       )
     \end{minted}
   #+end_latex
2. CMakeLists.txt 中的 *<build_depend>* 和 *<run_depend>*
   #+begin_latex
     \begin{minted}[frame=single, mathescape]{xml}
     <build_depend>urdf</build_depend>
     <run_depend>urdf</run_depend>
     \end{minted}
   #+end_latex


#+BEGIN_EXAMPLE
  tmp $ catkin_create_pkg test urdf tf
  Created file test/package.xml
  Created file test/CMakeLists.txt
  Successfully created files in /tmp/test. Please adjust the values in package.xml.
  tmp $ ls test
  CMakeLists.txt  package.xml
  tmp $ cat test/CMakeLists.txt | grep urdf
    urdf
  #  CATKIN_DEPENDS tf urdf
  tmp $ cat test/package.xml | grep urdf
    <build_depend>urdf</build_depend>
    <run_depend>urdf</run_depend>

#+END_EXAMPLE

**** urdf

#+BEGIN_SRC sh :results output :exports both
ls -l ~/Wally/Project/catkin_ws/src/julie/julie_description
#+END_SRC

#+RESULTS:
: 总用量 24
: -rw-rw-r-- 1 ben ben  111 11月 25 14:34 CMakeLists.txt
: drwxrwxr-x 2 ben ben 4096 11月 27 16:44 launch
: drwxrwxr-x 2 ben ben 4096 11月 27 16:46 meshes
: -rw-rw-r-- 1 ben ben  435 11月 25 14:20 package.xml
: drwxrwxr-x 2 ben ben 4096 11月 26 19:59 test
: drwxrwxr-x 2 ben ben 4096 11月 26 22:41 urdf

***** emacs auto-mode-alist
#+begin_latex
\begin{minted}[frame=single, mathescape]{lisp}
(add-to-list 'auto-mode-alist '("\\.xacro\\'" . nxml-mode))
(add-to-list 'auto-mode-alist '("\\.urdf\\'" . nxml-mode))
\end{minted}
#+end_latex

***** common_properties.xacro

#+INCLUDE: ~/Wally/Project/catkin_ws/src/julie/julie_description/urdf/common_properties.xacro :src xml


***** hokuyo.xacro
#+INCLUDE: ~/Wally/Project/catkin_ws/src/julie/julie_description/urdf/hokuyo.xacro :src xml


****** Trick 增加test文件夹用于测试，内部文件使用链接形式        :trick:

****** test
*$ rosrun xacro xacro.py test/hokuyo.xacro alpha:=true -o hokuyo.urdf*

+ 传递命令行参数
+ -o 指定输出文件名

*$ check_urdf hokuyo.urdf*

#+BEGIN_EXAMPLE
  robot name is: sensor_hokuyo
  ---------- Successfully Parsed XML ---------------
  root Link: base_link has 1 child(ren)
      child(1):  hokuyo_link_link
#+END_EXAMPLE

****** TODO 中文注释问题
UnicodeEncodeError: 'ascii' codec can't encode characters in position
464-471: ordinal not in range(128)

xacro.py 文件编码没有问题，

-> 那问题就是 *XML编码* ？

好的推断，但不对！

Pyhont 中 file.write() 方法的编码问题， /暂时解决不了/

*XML文件要有必要的注释，所以暂时使用英文注释*



****** error
1. xacro.XacroException: Property wasn't defined: u'_parent'

   property 使用 property定义， arg传递的是命令行参量(xacro.py)。

2. xacro.XacroException: Property parent recursively used

   macro中使用的参数名称不能与已经定义的property相同

***** microstrain.xacro

#+INCLUDE: ~/Wally/Project/catkin_ws/src/julie/julie_description/urdf/microstrain.xacro :src xml

类似 hokuyo.acro

***** TODO julie.xacro

#+INCLUDE: ~/Wally/Project/catkin_ws/src/julie/julie_description/urdf/julie.xacro :src xml

#+BEGIN_EXAMPLE
  $ check_urdf julie.urdf
  robot name is: julie
  ---------- Successfully Parsed XML ---------------
  root Link: base_footprint has 1 child(ren)
      child(1):  base_link
          child(1):  imu_link
          child(2):  lidar_link
#+END_EXAMPLE

**** launch

#+INCLUDE: ~/Wally/Project/catkin_ws/src/julie/julie_description/launch/display.launch :src xml

*** julie_gazebo
**** note

*ROS Jade is using the gazebo-5.x series* Jade有更多的特性，可以尝试。

**** gazebo_world
***** empty_world.launch
****** launch
#+include: ~/Wally/Project/catkin_ws/src/julie/julie_gazebo/launch/empty_world.launch :src xml

#+BEGIN_EXAMPLE
  julie_gazebo $ roslaunch gazebo_ros
  empty_world.launch         shapes_world.launch
  mud_world.launch           willowgarage_world.launch
  rubble_world.launch
#+END_EXAMPLE

****** gazebo_ros args
******* gzserver 命令行选项
*$ gzserver --help*

#+BEGIN_EXAMPLE
gzserver -- Run the Gazebo server.

`gzserver` [options] <world_file>

Gazebo server runs simulation and handles commandline options, starts
a Master, runs World update and sensor generation loops.


Options:
  -q [ --quiet ]                Reduce output to stdout.
  -h [ --help ]                 Produce this help message.
  -u [ --pause ]                Start the server in a paused state.
  -e [ --physics ] arg          Specify a physics engine
                                (ode|bullet|dart|simbody).
  -p [ --play ] arg             Play a log file.
  -r [ --record ]               Record state data.
  --record_encoding arg (=zlib) Compression encoding format for log data
                                (zlib|bz2|txt).
  --record_path arg             Absolute path in which to store state data
  --seed arg                    Start with a given random number seed.
  --iters arg                   Number of iterations to simulate.
  --minimal_comms               Reduce the messages output by gzserver
  -s [ --server-plugin ] arg    Load a plugin.
#+END_EXAMPLE

******* gazebo_ros 结点

$ rosrun gazebo_ros

#+BEGIN_EXAMPLE
debug        gdbrun       gzserver     spawn_model
gazebo       gzclient     perf
#+END_EXAMPLE

******* empty_world.launch 命令行参数含义

1. gui: *gzclient*

   Launch the user interface window of Gazebo (default true)

2. paused: gzserve -u

   Start Gazebo in a paused state (default false)
   #+begin_latex
     \begin{minted}[frame=single, mathescape]{xml}
       <arg unless="$(arg paused)" name="command_arg1" value=""/>
       <arg     if="$(arg paused)" name="command_arg1" value="-u"/>
     \end{minted}
   #+end_latex

3. headless: gzserver -r

   Disable any function calls to simulator rendering (Ogre)
   components. Does not work with gui:=true (default false)

   #+begin_latex
     \begin{minted}[frame=single, mathescape]{xml}
       <arg     if="$(arg headless)" name="command_arg2" value="-r"/>
       <arg unless="$(arg verbose)" name="command_arg3" value=""/>
     \end{minted}
   #+end_latex

4. debug: gzserver/debug

   Start gzserver (Gazebo Server) in debug mode using gdb (default
   false)

   #+begin_latex
     \begin{minted}[frame=single, mathescape]{xml}
       <arg unless="$(arg debug)" name="script_type" value="gzserver"/>
       <arg     if="$(arg debug)" name="script_type" value="debug"/>
     \end{minted}
   #+end_latex

5. verbose: gzserve --verbose

   #+begin_latex
     \begin{minted}[frame=single, mathescape]{xml}
       <arg unless="$(arg verbose)" name="command_arg3" value=""/>
       <arg     if="$(arg verbose)" name="command_arg3" value="--verbose"/>
     \end{minted}
   #+end_latex

6. usesimtime(gazebo)

   Tells ROS nodes asking for time to get the Gazebo-published
   simulation time, published over the ROS topic /clock (default true)

7. respawn: roslaunch node arguments

8. output: roslaunch node arguments

****** $GAZEBO_RESOURCE_PATH
#+BEGIN_SRC sh :results output :exports both
echo $GAZEBO_RESOURCE_PATH
#+END_SRC

#+RESULTS:
:

+ ~/.gazebo
+ /usr/share/gazebo-2.2/

****** empty.world

#+INCLUDE: /usr/share/gazebo-2.2/worlds/empty.world

#+INCLUDE: ~/Wally/Project/catkin_ws/src/julie/julie_gazebo/worlds/empty.world

****** 小结

理清了通过gazebo_ros启动Gazebo的最基本的launch。

***** julie_world.launch
#+INCLUDE: ~/Wally/Project/catkin_ws/src/julie/julie_gazebo/launch/julie_gazebo.launch :src xml

****** spawn_model arguments

~ $ *rosrun gazebo_ros spawn_model -h*

#+BEGIN_EXAMPLE
  spawn_model script started
  Commands:
      -[urdf|sdf|trimesh|gazebo] - specify incoming xml is urdf, sdf or trimesh format. gazebo arg is deprecated in ROS Hydro
      -[file|param|database] [<file_name>|<param_name>|<model_name>] - source of the model xml or the trimesh file
      -model <model_name> - name of the model to be spawned.
      -reference_frame <entity_name> - optinal: name of the model/body where initial pose is defined.
                                       If left empty or specified as "world", gazebo world frame is used.
      -gazebo_namespace <gazebo ros_namespace> - optional: ROS namespace of gazebo offered ROS interfaces.  Defaults to /gazebo/ (e.g. /gazebo/spawn_model).
      -robot_namespace <robot ros_namespace> - optional: change ROS namespace of gazebo-plugins.
      -unpause - optional: !!!Experimental!!! unpause physics after spawning model
      -wait - optional: !!!Experimental!!! wait for model to exist
      -trimesh_mass <mass in kg> - required if -trimesh is used: linear mass
      -trimesh_ixx <moment of inertia in kg*m^2> - required if -trimesh is used: moment of inertia about x-axis
      -trimesh_iyy <moment of inertia in kg*m^2> - required if -trimesh is used: moment of inertia about y-axis
      -trimesh_izz <moment of inertia in kg*m^2> - required if -trimesh is used: moment of inertia about z-axis
      -trimesh_gravity <bool> - required if -trimesh is used: gravity turned on for this trimesh model
      -trimesh_material <material name as a string> - required if -trimesh is used: E.g. Gazebo/Blue
      -trimesh_name <link name as a string> - required if -trimesh is used: name of the link containing the trimesh
      -x <x in meters> - optional: initial pose, use 0 if left out
      -y <y in meters> - optional: initial pose, use 0 if left out
      -z <z in meters> - optional: initial pose, use 0 if left out
      -R <roll in radians> - optional: initial pose, use 0 if left out
      -P <pitch in radians> - optional: initial pose, use 0 if left out
      -Y <yaw in radians> - optional: initial pose, use 0 if left out
      -J <joint_name joint_position> - optional: initialize the specified joint at the specified value
#+END_EXAMPLE

****** $() ${} *不要混淆*

error: ${alpha} is not a 'bool' type

在 launch 文件中， 使用 $() <dollor圆括号> 替换， 仅此一个

在 xacro 文件中， 使用 ${} <dollor花括号> 进行引用属性或者数学运算，使
用 $() 进行命令行参数传递。

****** 文件与文件夹命名要有规范

#+BEGIN_EXAMPLE
  Error [SystemPaths.cc:367] File or path does not exist
  ["/home/ben/Wally/Project/catkin_ws/src/julie/julie_gazebo/world/empty.world"]
#+END_EXAMPLE

#+BEGIN_EXAMPLE
  $ ls ~/.gazebo/ | grep world
  worlds
#+END_EXAMPLE

****** 手记
******* test as a whole: ok

#+BEGIN_EXAMPLE
$ roslaunch julie_gazebo julie_gazebo.launch
#+END_EXAMPLE

#+BEGIN_EXAMPLE
  test $ rosnode list
  /gazebo
  /rosout
  test $ rostopic list
  /clock
  /cmd_vel
  /gazebo/link_states
  /gazebo/model_states
  /gazebo/parameter_descriptions
  /gazebo/parameter_updates
  /gazebo/set_link_state
  /gazebo/set_model_state
  /imu_data
  /lidar_scan
  /odom
  /rosout
  /rosout_agg
  /tf
#+END_EXAMPLE

******* test lidar/imu
******** $() 不允许嵌套

#+begin_latex
\begin{minted}[frame=single, mathescape]{xml}
<param     if="$(arg alpha)" name="robot_description" command="$(arg $(arg sensor}_model)" />
\end{minted}
#+end_latex
error:

*Dollar signs '$' cannot be inside of substitution args [$(arg $(arg
sensor}_model)]*

******** 修改： 组合使用 if/unless/group 实现多重条件

#+begin_latex
  \begin{minted}[frame=single, mathescape]{xml}
    <param unless="$(arg alpha)" name="robot_description" command="$(arg robot_model)" />
    <group     if="$(arg alpha)">
    <param unless="$(arg test)" name="robot_description" command="$(arg imu_model)" />
    <param     if="$(arg test)" name="robot_description" command="$(arg lidar_model)" />
    </group>
  \end{minted}
#+end_latex

******** lidar： ok

#+BEGIN_EXAMPLE
$ roslaunch julie_gazebo julie_gazebo.launch alpha:=true
#+END_EXAMPLE

#+BEGIN_EXAMPLE
  test $ rosnode list
  /gazebo
  /rosout
  test $ rostopic list
  /clock
  /gazebo/link_states
  /gazebo/model_states
  /gazebo/parameter_descriptions
  /gazebo/parameter_updates
  /gazebo/set_link_state
  /gazebo/set_model_state
  /hokuyo_scan
  /rosout
  /rosout_agg
  test $
#+END_EXAMPLE

******** imu: ok,  test参数取名不好

#+BEGIN_EXAMPLE
test $ roslaunch julie_gazebo julie_gazebo.launch alpha:=true test:=false
#+END_EXAMPLE

#+BEGIN_EXAMPLE
  test $ rostopic list
  /clock
  /gazebo/link_states
  /gazebo/model_states
  /gazebo/parameter_descriptions
  /gazebo/parameter_updates
  /gazebo/set_link_state
  /gazebo/set_model_state
  /imu_data
  /rosout
  /rosout_agg
#+END_EXAMPLE

**** gazebo_rviz: 尽量地减少不同模块的耦合

*** julie_launch

julie_launch 主要包含了一些launch文件，主要以下配置文件

|-------------------------+----------------------------+-------------|
| Sensors                 | package                    | node        |
|-------------------------+----------------------------+-------------|
| hokuyo UTM30(Lidar)     | hokuyo_node                | hokuyo_node |
| microstrain 3GMS25(IMU) | microstrain_3dmgx2_imuNode | imu_node    |
|-------------------------+----------------------------+-------------|

#+include: ~/Wally/Project/catkin_ws/src/julie/julie_launch/CMakeLists.txt

#+include: ~/Wally/Project/catkin_ws/src/julie/julie_launch/CMakeLists.txt

**** hokuyo.launch

#+INCLUDE: ~/Wally/Project/catkin_ws/src/julie/julie_launch/launch/hokuyo.launch :src xml

1. hokuyo connecting
2. hokuyo parameters setting
3. roslaunch if/unless

测试OK。

**** microstrain.launch

#+INCLUDE: ~/Wally/Project/catkin_ws/src/julie/julie_launch/launch/microstrain.launch :src xml

IMU 有个初始化的过程，需要几秒钟的时间。

***** TODO 姿态似乎并不是很准 why?

1. 传感器输出的是什么数据？
2. ROS用的是什么消息，定义的是什么内容？
3. 如果需要校正，如何处理？

#+BEGIN_EXAMPLE
  header:
    seq: 1956
    stamp:
      secs: 1448536768
      nsecs: 743254578
    frame_id: imu_link
  orientation:
    x: 0.998275596255
    y: -0.0579387949886
    z: -0.00247682392276
    w: 0.00910004910749
  orientation_covariance: [0.0012250000000000002, 0.0, 0.0, 0.0, 0.0012250000000000002, 0.0, 0.0, 0.0, 0.0012250000000000002]
  angular_velocity:
    x: -0.000441648298874
    y: 0.000969532527961
    z: 0.00244149100035
  angular_velocity_covariance: [0.000144, 0.0, 0.0, 0.0, 0.000144, 0.0, 0.0, 0.0, 0.000144]
  linear_acceleration:
    x: -0.049793684483
    y: 0.180994773722
    z: -9.81023545727
  linear_acceleration_covariance: [0.009604000000000001, 0.0, 0.0, 0.0, 0.009604000000000001, 0.0, 0.0, 0.0, 0.009604000000000001]
#+END_EXAMPLE

**** lidar_sim.launch

#+INCLUDE: ~/Wally/Project/catkin_ws/src/julie/julie_launch/launch/lidar_sim.launch :src xml

**** imu_sim.launch

#+INCLUDE: ~/Wally/Project/catkin_ws/src/julie/julie_launch/launch/imu_sim.launch :src xml

OK， 证明 rviz.launch 可行

**** rviz.launch

仅可视化激光数据，用于测试传感器或仿真，一般需要被其他launch文件包含。

1. 匿名rviz
2. config arg

#+INCLUDE: ~/Wally/Project/catkin_ws/src/julie/julie_launch/launch/rviz.launch :src xml

**** hector slam

#+INCLUDE: ~/Wally/Project/catkin_ws/src/julie/julie_launch/launch/hector.launch :src xml

#+INCLUDE: ~/Wally/Project/catkin_ws/src/julie/julie_launch/launch/hector_with_imu.launch :src xml

1. /map_size/ 的大小会影响实时性，所以不能太大
2. hector_imu_attitude_to_tf 的 /API/ 消息和参数的命名和 /remap/
   [[file:~/Wally/Project/catkin_ws/src/julie/julie_launch/launch/hector_with_imu.launch::<node%20pkg%3D"hector_imu_attitude_to_tf"%20type%3D"imu_attitude_to_tf_node"%20name%3D"imu_attitude_to_tf_node"%20][hector_imu_attitude_to_tf]]

**** map merge

http://answers.ros.org/question/133486/how-can-i-merge-some-maps/

https://github.com/tu-darmstadt-ros-pkg/mapstitch

**** julie.launch

#+INCLUDE: ~/Wally/Project/catkin_ws/src/julie/julie_launch/launch/julie.launch :src xml

**** sim.launch

#+INCLUDE: ~/Wally/Project/catkin_ws/src/julie/julie_launch/launch/sim.launch :src xml

[[~/Wally/Journal/Figure/scrot/30792uVs.png]]

**** teleop_key.py

#+INCLUDE: ~/Wally/Project/catkin_ws/src/julie/julie_launch/scripts/teleop_key.py :src python

发送命令 /cmd_vel 给 plannar_move_plugin

最好在单独一个窗口，因为需要交互。

***** sys, select, termios, tty
#+begin_latex
\begin{minted}[frame=left, mathescape]{py}
import sys, select, termios, tty
\end{minted}
#+end_latex

*优先查阅手册*

****** termios:Low-level terminal control interface.           :termios:

This module provides an interface to the POSIX calls for tty I/O
control.

All functions in this module take a *file descriptor fd* as their first
argument. This can be an integer file descriptor, such as returned by
*sys.stdin.fileno()*, or a file object, such as *sys.stdin* itself.

[[/home/ben/Wally/Journal/Figure/scrot/4904FSb.png]]

******* example
#+INCLUDE: ~/Wally/Journal/Project/Python/termios/test.py :src python

输入密码时不可见

****** tty:Terminal control functions                              :tty:

The *tty* module defines functions for putting the tty into cbreak and
raw modes.

1. what is tty?
2. what is cbreak mode?
3. what is raw mode?

+Because it requires the termios module, it will work only on Unix+

[[/home/ben/Wally/Journal/Figure/scrot/4904TrQ.png]]

****** 终端模式                                                   :term:

终端I/O有两种不同的工作方式：
1. 规范方式输入处理。在这种方式中，终端输入以行为单位进行处理。对于每
   个读要求，终端驱动程序最多返回一行。
2. 非规范方式输入处理。输入字符不以行为单位进行装配。

如果不作特殊处理，则默认方式是规范方式。

V7和BSD类的终端驱动程序支持三种终端输入方式：
+ 精细加工方式(输入装配成行，并对特殊字符进行处理)；
+ 原始方式(输入不装配成行，也不对特殊字符进行处理)；
+ cbreak方式(输入不装配成行，但对某些特殊字符进行处理)。

******* reference

+ [[https://app.yinxiang.com/shard/s52/nl/11551545/3300d5e1-d8a3-48df-8ff1-bc4be441f46d?title=%E7%BB%88%E7%AB%AFI%2FO%20termios%E5%B1%9E%E6%80%A7%E8%AE%BE%E7%BD%AE%20tcsetattr%E8%AE%BE%E7%BD%AE%20-%20dartagnan%20-%20%E5%8D%9A%E5%AE%A2%E5%9B%AD][CNDS: 终端I/O termios属性设置 tcsetattr]]
****** select: waiting for I/O completion                       :select:

This module provides access to the *select()* and *poll()* functions
available in most operating systems, epoll() available on Linux 2.5+
and kqueue() available on most BSD. Note that on Windows, it only
works for sockets; on other operating systems, it also works for other
file types (in particular, on Unix.

[[/home/ben/Wally/Journal/Figure/scrot/4904tNF.png]]

****** dict
#+begin_latex
  \begin{minted}[frame=left, mathescape]{py}
  moveBindings = {
          'i':(1,0),
          'o':(1,-1),
          'j':(0,1),
          'l':(0,-1),
          'u':(1,1),
          ',':(-1,0),
          '.':(-1,1),
          'm':(-1,-1),
             }

  speedBindings={
          'q':(1.1,1.1),
          'z':(.9,.9),
          'w':(1.1,1),
          'x':(.9,1),
          'e':(1,1.1),
          'c':(1,.9),
            }
  \end{minted}
#+end_latex

****** def get_key()

#+begin_latex
  \begin{minted}[frame=left, mathescape]{py}
  def getKey():
      tty.setraw(sys.stdin.fileno())
      rlist, _, _ = select.select([sys.stdin], [], [], 0.1)
      if rlist:
          key = sys.stdin.read(1)
      else:
          key = ''

      termios.tcsetattr(sys.stdin, termios.TCSADRAIN, settings)
      return key

  speed = 0.75
  turn = 1
  \end{minted}
#+end_latex

1. setraw 设置为原始模式

2. rlist: wait until ready for reading

****** ros related

#+begin_latex
  \begin{minted}[frame=leftline, mathescape]{py}
      rospy.init_node('teleop')
      pub = rospy.Publisher('/cmd_vel', Twist, queue_size=5)

      ...

      twist = Twist()
      twist.linear.x = control_speed; twist.linear.y = 0; twist.linear.z = 0
      twist.angular.x = 0; twist.angular.y = 0; twist.angular.z = control_turn
      pub.publish(twist)
  \end{minted}
#+end_latex

****** speed control logic
#+begin_latex
  \begin{minted}[frame=leftline, mathescape]{py}
          while(1):
              key = getKey()
              if key in moveBindings.keys():
                  x = moveBindings[key][0]
                  th = moveBindings[key][1]
                  count = 0
              elif key in speedBindings.keys():
                  speed = speed * speedBindings[key][0]
                  turn = turn * speedBindings[key][1]
                  count = 0

                  print vels(speed,turn)
                  if (status == 14):
                      print msg
                  status = (status + 1) % 15
              elif key == ' ' or key == 'k' :
                  x = 0
                  th = 0
                  control_speed = 0
                  control_turn = 0
              else:
                  count = count + 1
                  if count > 4:
                      x = 0
                      th = 0
                  if (key == '\x03'):
                      break

              target_speed = speed * x
              target_turn = turn * th

              if target_speed > control_speed:
                  control_speed = min( target_speed, control_speed + 0.02 )
              elif target_speed < control_speed:
                  control_speed = max( target_speed, control_speed - 0.02 )
              else:
                  control_speed = target_speed

              if target_turn > control_turn:
                  control_turn = min( target_turn, control_turn + 0.1 )
              elif target_turn < control_turn:
                  control_turn = max( target_turn, control_turn - 0.1 )
              else:
                  control_turn = target_turn

              twist = Twist()
              twist.linear.x = control_speed; twist.linear.y = 0; twist.linear.z = 0
              twist.angular.x = 0; twist.angular.y = 0; twist.angular.z = control_turn
              pub.publish(twist)

  \end{minted}
#+end_latex

****** try

#+begin_latex
  \begin{minted}[frame=leftline, mathescape]{py}
    try:
        ...
    except:
        print e
   finally:
        twist = Twist()
        twist.linear.x = 0; twist.linear.y = 0; twist.linear.z = 0
        twist.angular.x = 0; twist.angular.y = 0; twist.angular.z = 0
        pub.publish(twist)
  \end{minted}
#+end_latex

**** bagfile
#+INCLUDE: ~/Wally/Project/catkin_ws/bagfile/

**** rosbag 不是一个包，不能在 launch file中启动

#+INCLUDE: ~/Wally/Project/catkin_ws/src/julie/julie_launch/launch/bag.launch :src xml

**** DONE laser_filter.launch
- State "DONE"       from "NEXT"       [2015-12-23 三 19:49]
- State "NEXT"       from "NEXT"       [2015-12-23 三 11:04] \\
  曲线比较，订阅并重新发布 scan_filtered
- State "NEXT"       from "NEXT"       [2015-12-23 三 10:28] \\
  - 在 rqt.launch 包含 rviz.lanuch 以及 toggle 参数
  - 更改 scan_filtered 的 frame_id 并 publish static tf from old frame
- State "NEXT"       from "TODO"       [2015-12-23 三 09:53] \\
  同样的配置重新测试可以了，下一步如何动态设置消息的 frame_id，可可视化
  需要
- State "TODO"       from ""           [2015-12-15 二 16:51] \\
  laser_filters 能够运行，接收和发布的话题配置也正确，只是发布的话题为空，
  不知为何

#+INCLUDE: ~/Wally/Project/catkin_ws/src/julie/julie_launch/launch/laser_filter.launch :src xml

#+INCLUDE: ~/Wally/Project/catkin_ws/src/julie/julie_launch/config/laser_filter.yaml :src yaml

#+INCLUDE: ~/Wally/Project/catkin_ws/src/julie/julie_launch/scripts/reassign_frame_id.py

- laser_filters 前后 LaserScan 的 frame_id 一致
- laser_filters 的 Node API 中没有 frame_id 选项，也就是说，不能重置 frame_id

**** DONE rqt_launch
- State "DONE"       from ""           [2015-12-21 一 15:56] \\
  在理解了命令行方式之后，使用图形界面方式能够进一步增加开发效率

#+INCLUDE: ~/Wally/Project/catkin_ws/src/julie/julie_launch/launch/rqt.launch

- perspective import export 的含义,  导出的文件不能像 rviz 那样直接作
  为参数在命令行传递，需要手动导入。新建的 perspective 可以作为参数。
- rviz 不要集成在 rqt 中
- 使用 rqt_bag 需要手动 publish，默认不发布。

[[/home/ben/Wally/Journal//Figure/scrot/29439HuT.png]]

**** NEXT tf_height.cpp
- State "NEXT"       from ""           [2016-01-02 六 16:55] \\
  1. 通过命令行传递高度参数
  2. 通过话题接收超声波传感器数据

The base_footprint frame provides no height information and represents
the 2D pose of the robot (position and orientation). The
base_stabilized frame adds information about the robot height relative
to the map/odom layer.

#+INCLUDE: ~/Wally/Project/catkin_ws/src/julie/julie_launch/src/tf_height.cpp

*** MultiMachine 连接 raspberry

1. ROS_MASTER_URI

   #+BEGIN_EXAMPLE
   ~ $ export ROS_MASTER_URI=http://192.168.1.3:11311
   #+END_EXAMPLE

2. ROS_IP

   error: /Couldn't find an AF_INET address for .../

   + http://answers.ros.org/question/163556/how-to-solve-couldnt-find-an-af_inet-address-for-problem/

   #+BEGIN_EXAMPLE
   export ROS_IP=10.0.6.9
   #+END_EXAMPLE

   #+BEGIN_EXAMPLE
   $ hostname -I
   #+END_EXAMPLE

3. +测试可以，但是延迟似乎过高，是否有影响还有待测试+

   原因可能有
   - raspberry 不够快，查看内在试试
   - wlan 和 eth0 之间通信并不快？？？

** camon

#+include: ~/Wally/Project/catkin_ws/src/camon/
#+include: ~/Wally/Project/catkin_ws/src/camon/README.md
#+include: ~/Wally/Project/catkin_ws/src/camon/ChangeLog.org

*** Notes

1. 从目录组织结构到编码风格全面参考 PR2
2. 机械结构上参考实验室的小车
3. 不要引用 wally 和 julie 里的文件

*** TODOs

- [ ] 前轮差分
- [ ] 后轮为全向轮
- [ ] 水平方向的静态 SICK 和舵机控制做俯仰旋转的 SICK
- [ ] 普通相机
- [ ] Kinect
- [ ] 使用 blender 绘制需要的三维网格模型

*** camon description

#+include: ~/Wally/Project/catkin_ws/src/camon/camon_description/CMakeLists.txt
#+include: ~/Wally/Project/catkin_ws/src/camon/camon_description/package.xml

Notes
1. 不要包含 launch 文件

**** catkin_create_pack error

#+BEGIN_EXAMPLE
catkin_create_pkg: error: argument --rosdistro is required
$ catkin_create_pkg camon_description  --rosdistro jade
#+END_EXAMPLE

**** 目录结构参照 pr2_description

- documents: 包含文档，可以使用 doc 作为目录名
- gazebo: gazebo 仿真相关
- materials: 材质图片文件
- meshes: 包含三维风格文件(.dae)
- robots: 以不同方式组合机器人
- test: 测试文件
- urdf: 部件的 xacro 文件

**** urdf

#+include: ~/Wally/Project/catkin_ws/src/camon/camon_description/urdf/common.xacro
#+include: ~/Wally/Project/catkin_ws/src/camon/camon_description/urdf/materials.xacro

***** base

#+include: ~/Wally/Project/catkin_ws/src/camon/camon_description/urdf/base/base.usdf.xacro


***** sensors

***** tilting laser

*** camon launch

#+include: ~/Wally/Project/catkin_ws/src/camon/camon_launch/CMakeLists.txt
#+include: ~/Wally/Project/catkin_ws/src/camon/camon_launch/package.xml

仅包含一些 launch 文件

**** display.launch

#+include: ~/Wally/Project/catkin_ws/src/camon/camon_launch/launch/display.launch

***** 测试 pr2 base

** PCL in ROS way

#+include: ~/Wally/Project/pcl_tutorials

http://www.pointclouds.org/documentation/tutorials/

Note:

1. 在 ROS 中使用 PCL，这样运行起来比较方便，可以使用 rosrun
2.

*** 关于本地文档

1. HTML vs PDF： 前者

2. wget vs doxygen: 后者

   - wget 又慢以乱

   - doxygen 才是正宗

3. doxygen

   - 编译时安装： http://www.pointclouds.org/documentation/tutorials/generate_local_doc.php

   - 手动执行 doxygen: 修改 doxygen 配置文件, 很不爽

4. 别管这些次要的了

*** [[http://www.pointclouds.org/documentation/tutorials/basic_structures.php#basic-structures][Basic Structure]]

*PointCloud*



To simplify development, the PointCloud class contains a number of
helper member functions. For example, users don’t have to check if
height equals 1 or not in their code in order to see if a dataset is
organized or not, but instead use *PointCloud()*:

#+BEGIN_SRC cpp
if (!cloud.isOrganized ())
#+END_SRC

*** writing point cloud data to PCD files

http://www.pointclouds.org/documentation/tutorials/basic_structures.php#basic-structures

#+include: ~/Wally/Project/pcl_tutorials/src/pcd_write.cpp

**** PointCloud

http://docs.pointclouds.org/trunk/classpcl_1_1_point_cloud.html#details

***** attributes

[[http://www.pointclouds.org/documentation/tutorials/basic_structures.php#basic-structures][Doc:PointClou]]d

- width
- height
- points
- is_dense
- sensor_origin
- senor_orientation

***** methods

**** 头文件

头文件位置 =/usr/include/pcd-1.7/pc/=

#+BEGIN_SRC cpp
#include <pcl-1.7/pcl/io/pcd_io.h>
#include <pcl-1.7/pcl/point_types.h>
#+END_SRC

创建 link

#+BEGIN_EXAMPLE
 ~ $ ls -l /usr/include/pcl
lrwxrwxrwx 1 root root 24  1月  7 09:53 /usr/include/pcl -> /usr/include/pcl-1.7/pcl
#+END_EXAMPLE

**** CMakeLists.txt

#+include: ~/Wally/Project/pcl_tutorials/CMakeLists.txt

*** [[http://www.pointclouds.org/documentation/tutorials/voxel_grid.php#voxelgrid][Downsampling a PointCloud using a VoxelGrid filter]]

- *downsample*: reduce the number of points
- using a *voxelized grid* approach

#+include: ~/Wally/Project/pcl_tutorials/src/voxel_grid.cpp

*** Merging PCDs
**** concatenate the points of two points clouds

http://pointclouds.org/documentation/tutorials/concatenate_clouds.php

#+include: ~/Wally/Project/pcl_tutorials/src/concatenate_clouds.cpp

*** downsampling

#+include: ~/Wally/Project/catkin_ws/src/wally/wally_launch/src/downsample.cpp

*** merge_pcl

http://docs.ros.org/hydro/api/cob_3d_mapping_tools/html/merge__pcds_8cpp_source.html

#+INCLUDE: ~/Wally/Project/catkin_ws/src/wally/wally_launch/src/merge_pcds.cpp

*** PCL

- 先保存为 pointcloud2
- 之后 downsampling

**** data structure

PCL has about four different ways of representing point cloud data

- sensor_msgs::PointCloud — ROS message (*deprecated*)
- *sensor_msgs::PointCloud2* — ROS message
- pcl::PCLPointCloud2 — PCL data structure mostly for compatibility with ROS (I think)
- *pcl::PointCloud<T>* — standard PCL data structure

**** laser_assembler


** Navigator
*** Navigator Manul
**** 操作注意事项
+ 开机，四伺服处于闭环状态，锁死电机，勿动
+ 每月充电，保证电池性能
+ 载重小于80Kg
**** 特点
Navigator Q2 是四轮 45 度全向轮轮系的机器人平台, 使用航发
公司的 QMA-15 全向轮,与传统轮系相比,能够实现平移、自转、平
移并自转等特殊运动。
**** 性能指标
+ 驱动方式： 四轮独立驱动
+ *悬挂形式：液压阻尼避震器悬挂* ???
+ 负载：80KG
+ 电机类型： *空心杯直流伺服电机*
+ 电机额定功率： 90W
+ 电机编码器： 500线/转，A、B相输出
+ 电机驱动： 伺服驱动器，CAN总线，RS232通信接口
+ 最大移动速度： 1.2m/s
+ 最大自转速度：145°/s
+ 最小转弯半径：0
+ 电池 24V/18.2Ah锂电池

**** 电机驱动器

美国Copley Control公司 *ACJ-055-18* 高性能直流伺服驱动器


#+DOWNLOADED: /tmp/screenshot.png @ 2015-06-29 10:21:43
 [[~/Wally/Journal/Figure/Navigator/screenshot_2015-06-29_10:21:43.png]]

**** 电路硬件

***** 16路超声测距传感器板

***** 电源板

#+DOWNLOADED: /tmp/screenshot.png @ 2015-06-29 10:28:25
 [[~/Wally/Journal/Figure/Navigator/screenshot_2015-06-29_10:28:25.png]]

+ 24V
+ 12V
+ 5V


#+DOWNLOADED: /tmp/screenshot.png @ 2015-06-29 10:30:33
 [[~/Wally/Journal/Figure/Navigator/screenshot_2015-06-29_10:30:33.png]]
通信方式
+ CAN总线
+ UART串口，TTL电平

***** 运动控制卡

#+DOWNLOADED: /tmp/screenshot.png @ 2015-06-29 10:31:21
 [[~/Wally/Journal/Figure/Navigator/screenshot_2015-06-29_10:31:21.png]]

1. 运动控制方式
   + 步进电机方式？？
   + CAN总线（独立）
   + 串口命令方式

2. 模式
   + 速度模式：接收命令后立即执行，没有后续命令则持续到设置默认时间结
     束
   + 位置模式：先保存到命令队列，收到开始命令后才按顺序执行

***** 主控板
1. *STM32F407VE*
   + 32位
   + ARM Cortex-M4F
   + 168M主频
   + 210MIPS
   + 512K FLASH
   + 196K SRAM
   + LQFP 封装

2. 资源
   + 两个RS232电平UART串口
     - 一个可以直接连接到PC串口
     - 一个以3Pin白端子连接到其他设备
   + 一个TTL电平的UART串口，可以连接其它需要控制端的设备
   + 一个RS485接口
   + 一个TF卡接口，使用SPI总线
   + 一个TFT LCD接口，使用FSMC，带SPI接口，和TF卡接口共用
   + 两路CAN总线接口
   + 8个ADC输入
   + 两个DAC输出
   + 8个PWM输出
   + 一个I2C接口，和PWM2，PWM3复用
   + 标准20针JTAG接口

3. 尺寸：86mm*100mm

***** OFPS定位模块
+ 短时间内对机器人运动轨迹进行辅助定位
+ 三个码盘
+ CAN总线和UART串口
+ STM32F4


#+DOWNLOADED: /tmp/screenshot.png @ 2015-06-29 10:52:04
 [[~/Wally/Journal/Figure/Navigator/screenshot_2015-06-29_10:52:04.png]]

***** Pathfinder遥控器

*** RHF407
**** 处理器
***** 时钟、启动与复位
+ 主时钟： 25M无源晶振
+ 启动方式： BOOT0接地，总是从用户FLASH启动
+ 备份电源：使用可充电纽扣锂电池
+ 复位电路：SP809芯片
  #+DOWNLOADED: /tmp/screenshot.png @ 2015-06-29 11:14:04
  [[~/Wally/Journal/Figure/Navigator/screenshot_2015-06-29_11:14:04.png]]
***** JTAG
JTAG: JTAG254-10x2
#+DOWNLOADED: /tmp/screenshot.png @ 2015-06-29 11:25:53
[[~/Wally/Journal/Figure/Navigator/screenshot_2015-06-29_11:25:53.png]]

***** 电源电路
#+DOWNLOADED: /tmp/screenshot.png @ 2015-06-29 11:37:35
 [[~/Wally/Journal/Figure/Navigator/screenshot_2015-06-29_11:37:35.png]]

+ D1 SS14 反压保护
+ LM1117-3.3稳压
+ FB1/FB2磁珠滤波给模拟电路供电

***** LED 指示灯

#+DOWNLOADED: /tmp/screenshot.png @ 2015-06-29 11:42:53
 [[~/Wally/Journal/Figure/Navigator/screenshot_2015-06-29_11:42:53.png]]

使用 *倒灌式* 连接

***** 按键电路

#+DOWNLOADED: /tmp/screenshot.png @ 2015-06-29 11:43:58
 [[~/Wally/Journal/Figure/Navigator/screenshot_2015-06-29_11:43:58.png]]

+ 外部上拉
+ 电容滤波
***** RS232串口
*MAX3232*
#+DOWNLOADED: /tmp/screenshot.png @ 2015-06-29 11:44:54
 [[~/Wally/Journal/Figure/Navigator/screenshot_2015-06-29_11:44:54.png]]

+ 2路
+ 一路串口接到DB9孔式插座
+ 一路接到端子插座

***** TTL串口电路

#+DOWNLOADED: /tmp/screenshot.png @ 2015-06-29 14:07:55
 [[~/Wally/Journal/Figure/Navigator/screenshot_2015-06-29_14:07:55.png]]

直接从处理器连接到端子，同时提供3whIO口线作控制用。

***** RS485电路
*SP3485* or *MAX3485* 电平转换
#+DOWNLOADED: /tmp/screenshot.png @ 2015-06-29 14:09:54
 [[~/Wally/Journal/Figure/Navigator/screenshot_2015-06-29_14:09:54.png]]

JP7的1，2引脚短路时使用终端阻抗匹配电阻

***** CAN总线电路

#+DOWNLOADED: /tmp/screenshot.png @ 2015-06-29 14:21:32
 [[~/Wally/Journal/Figure/Navigator/screenshot_2015-06-29_14:21:32.png]]

驱动芯片 *SN65HBD230*

***** USB

#+DOWNLOADED: /tmp/screenshot.png @ 2015-06-29 14:22:57
 [[~/Wally/Journal/Figure/Navigator/screenshot_2015-06-29_14:22:57.png]]

+ 处理器有两路USB，这是使用全速OTG端口
+ 作为主机时应用不多，仅做从机。

***** TF卡

#+DOWNLOADED: /tmp/screenshot.png @ 2015-06-29 14:25:02
 [[~/Wally/Journal/Figure/Navigator/screenshot_2015-06-29_14:25:02.png]]

TF卡使用SPI总线连接方式，各种信号都外接上拉电阻。

***** LCD

#+DOWNLOADED: /tmp/screenshot.png @ 2015-06-29 14:26:46
 [[~/Wally/Journal/Figure/Navigator/screenshot_2015-06-29_14:26:46.png]]

接口兼容神州王3.2寸TFT模块。

***** ADC

#+DOWNLOADED: /tmp/screenshot.png @ 2015-06-29 14:28:18
 [[~/Wally/Journal/Figure/Navigator/screenshot_2015-06-29_14:28:18.png]]

直接接到处理器口线上，使用时必须保证不能超过处理器的极限条件以损坏处理
器，否则输入前需要添加保护电路。

***** DAC

#+DOWNLOADED: /tmp/screenshot.png @ 2015-06-29 14:31:02
 [[~/Wally/Journal/Figure/Navigator/screenshot_2015-06-29_14:31:02.png]]
处理器线口直接输出，还可以做ADC使用。

***** PWM

#+DOWNLOADED: /tmp/screenshot.png @ 2015-06-29 14:32:04
 [[~/Wally/Journal/Figure/Navigator/screenshot_2015-06-29_14:32:04.png]]

处理器接口直接输出，可以接舵机或其它设备。

**** 开发环境

+ MDK：ARM7, ARM9, 部分Cortex
+ IAR：ARM11, Cortex-A9

+ 基于GNU的：emIDE

**** 芯片

***** AMS1117电源转换
1. Features
   + dropout voltage 1.2v 压差
   + Line regulation 0.2% max
   + Load regulation 0.4% max
   + Current limiting and Thermal Protection
   + Adjustable Output Voltage or Fixed 1.25V, 1.5V, 1.8V, 2.5V, 2.85V, 3.3V, 5V
   + Maxumum Input Voltage 15V


***** STM32F407VE

****** ICP & IAP
1. *in-circuit programming(ICP)*
   + JTAG
   + SWD
   + the boot loader
2. *in-application programming(IAP)* can use any communication
   interface supported by the microcontroller(I/Os, USB, CAN, UART,
   I2C, SPI, etc.) to download data into memory,  With IAP, the Flash
   memory can be reprogrammed while the application is running,
   Nevertheless, part of the application has to have been previously
   programmed in the Flash memory using ICP

****** Glossary
+ The CPU nitegrates two debug ports:
  - *JTAG debug port(JTAG-DP)* provides a 5-pin standard interface
    based on the *Joint Test Action Group(JTAG)* protocal
  - *SWD debug port(SWD-DP)* provides a 2-pin(clock and data)
    interface based on the *Serial Wire Debug* protocal
+ *word*: data/instruction of 32-bit length
+ *Half world*: data/instruction of 16-bit length
+ *Byte*: data of 8-bit length
+ *Double word*: data of 64-bit length
+ *IAP(in-application programming)*: IAP is the ability to reprogram
  the Flash memory of a microcontroller while the user program is running.
+ *ICP(in-circuit programming)*: ICP is the ability to program the
  Flash memory of a microcontroller using the JTAG protocol, the SWD
  protocol or the bootloader while the device is mounted on the user
  application board.
+ *I-Code*: this bus connects the Instruction bus of the CPU core to
  the instruction interface. Prefetch is performed on this bus.
+ *D-Code*: this bus connects the D-Code bus(literal load and debug
  access) of the CPU to the Flash data interface.
+ *OBL*: option byte loader
+ *AHB*: advanced high-preformance bus

*****

*** CAN
*CAN(Controller Area Network)* 控制器局域网

CAN总线是唯一成为国际标准的现场总线，也是国际上应用最为广泛的现场总线
之一。

+ 成本低
+ 传输距离远(<10Km)
+ 传输速率高（1Mb/s）


层： OSI开放系统互连模型

+ 物理介质：双绞线（常用），光纤

+ 信号线： *CAN_H* 和 *CAN_L*
  - 静态时均为2.5V。状态表逻辑1，也称隐形
  - CAN_H(3.5V)比CAN_L(1.5V)高表逻辑0, 称显形

+ 标准CAN的标志符长度为11位，扩展格式可达29位

+

*** Navigator

**** note

1. STM32 主控
2. 模块化： 每一个模块通过 CAN 或 UART 可以发送命令或接收数据
3. 可编程！！！
4. 有内部使用的CAN控制器
5. 使用CAN

**** 需要用它干嘛？

1. 获取编码器数据用于计算位置
2. 发送控制指令
3. 指令的封装？？ ROS how?

**** 暂时没有能力做这件事情。。。。

**** 复制到 Reference 目录下新建的 Product 文件夹下

** backpack-slam

#+include: ~/Wally/Project/backpackslam

*** reference

**** [[~/Wally/GraduationProject/Literature/liu2010indoor.pdf][liu2010indoor]]

***** bib

@inproceedings{liu2010indoor,
  title={Indoor localization and visualization using a human-operated backpack system},
  author={Liu, Timothy and Carlberg, Matthew and Chen, George and Chen, Jacky and Kua, John and Zakhor, Avideh},
  booktitle={Indoor Positioning and Indoor Navigation (IPIN), 2010 International Conference on},
  pages={1--10},
  year={2010},
  organization={IEEE}
}

***** literature

1. SLAM [1]
2. 6D SLAM [2-4]
3. ICP [5]
4. loop closure [3, 8-10]
5. backpack slam [11]

**** [[~/Wally/GraduationProject/Literature/chen2010indoor.pdf][chen2010indoor]]

***** bib

@inproceedings{chen2010indoor,
  title={Indoor localization algorithms for a human-operated backpack system},
  author={Chen, George and Kua, John and Shum, Stephen and Naikal, Nikhil and Carlberg, Matthew and Zakhor, Avideh},
  booktitle={3D Data Processing, Visualization, and Transmission},
  year={2010},
  organization={Citeseer}
}

**** [[~/Wally/GraduationProject/Literature/kua2012automatic.pdf][kua2012automatic]]

***** bib

@inproceedings{kua2012automatic,
  title={Automatic loop closure detection using multiple cameras for 3d indoor localization},
  author={Kua, John and Corso, Nicholas and Zakhor, Avideh},
  booktitle={IS\&T/SPIE Electronic Imaging},
  pages={82960V--82960V},
  year={2012},
  organization={International Society for Optics and Photonics}
}

**** [[~/Wally/GraduationProject/Literature/naikal2009image.pdf][naikal2009image]]

***** bib

@inproceedings{naikal2009image,
  title={Image augmented laser scan matching for indoor dead reckoning},
  author={Naikal, Nikhil and Kua, John and Chen, George and Zakhor, Avideh},
  booktitle={Intelligent Robots and Systems, 2009. IROS 2009. IEEE/RSJ International Conference on},
  pages={4134--4141},
  year={2009},
  organization={IEEE}
}

** WallyPCB
*** 电源模块
**** thoughts
+ 需要几种电源
+ 几层PCB，哪层做为电源层，怎么敷铜
+ 电源的反向防护（二级管选型）和过压保护（how）
**** 功率分析

- UTM

  [[/home/wally/Wally/Journal//Figure/scrot/151903Kb.png]]

- Microstrain

  [[/home/wally/Wally/Journal//Figure/scrot/15190EVh.png]]

- raspberry

  5V 1.2A
  - GPIO ： 50mA
  - HDMI : 50mA
  - Camera: 250mA
  - keyboard/mice: 100mA~1000mA

- LMS 291

  [[/home/ben/Wally/Journal//Figure/scrot/15190Rfn.png]]

Power

12*3 + 5*0.08 < 40W

https://e2e.ti.com/blogs_/b/powerhouse/archive/2015/09/16/high-density-pcb-layout-of-dc-dc-converters-part-2

**** 元器件选型


1. 保护二极管

   输入电压 24V，输入电流 5A -> *>=10A*

2. 电容

   1) C1 : 1000nF(1uF)/100v 1210 贴片

      [[https://detail.tmall.com/item.htm?spm=a1z10.3-b.w4011-9803707049.141.Qsl3xb&id=40172420253&rn=f07375e692f9f510e7f9f9688f5eb3e6&abbucket=2][TAOBAO]]

   2) C2 : 100nF(0.1uF)/100v 1206 贴片

      [[https://detail.tmall.com/item.htm?spm=a1z10.3-b.w4011-9803707049.31.qmjSjk&id=36669885421&rn=26301a86ca014ad46fb999cfea582e6d&abbucket=2][TAOBAO]]

   3) C3 : 470uF/50v  Cap_R10 直插

      [[http://world.tmall.com/item/36665230696.htm?spm=a312a.7700824.w4011-9803707049.65.sOVZdw&id=36665230696&rn=55cef1f557a853d34adb753cf387b5d8&abbucket=2][TAOBAO]]

   4) C4 ： 0.022uF（22nF）/250V

      [[http://world.tmall.com/item/40335907016.htm?spm=a312a.7700824.w4011-9803707049.31.22PlV1&id=40335907016&rn=d4739ac8c57f57b722550c98c70d636a&abbucket=2][TAOBAO]]

   5) C5 ： 22nF/1000V 1210 高耐压表贴陶瓷电容

      [[http://world.tmall.com/item/36669083118.htm?spm=a312a.7700824.w4011-9803644906.31.WxgZz9&id=36669083118&rn=eca23e5e0af541c5a7a508f8126efc54&abbucket=2][TAOBAO]]

   6) C6 100u/A * 5A = 500u，12V -> *470u, 25V* (输入端为24V，电压过小)

   [[/home/wally/Wally/Journal/Figure/scrot/2311yEz.png]]

3. 端子

   1) 5557 为连接器，选错，不能焊接到电路板上

   2) 重选

***** connector

输入： KF128-2
输出：5557 https://item.taobao.com/item.htm?id=41139630227&ali_refid=a3_430582_1006:1104098595:N:%E6%8F%92%E6%8B%94%E5%BC%8F%E6%8E%A5%E7%BA%BF%E7%AB%AF%E5%AD%90:cd6bd631faf7c8d74c8748dd98c47073&ali_trackid=1_cd6bd631faf7c8d74c8748dd98c47073&spm=a230r.1.14.3.Ozxn0o#detail

***** protector

电容：100uF/A

[[/home/wally/Wally/Journal/Figure/scrot/3098085D.png]]

二极管：

开关电源？

***** ref

[[https://app.yinxiang.com/shard/s52/nl/11551545/273c7e8c-dacd-4f22-a004-bb30aec5d710/?csrfBusterToken=U%3Db04339%3AP%3D%2F%3AE%3D152408a07ab%3AS%3Df5af2039594c32603700a7a7b6d115dc][直插式电阻电容封装与尺寸图解]]

[[https://app.yinxiang.com/shard/s52/nl/11551545/96b290e4-eb4d-4148-b51a-72fa4469c77e/?csrfBusterToken=U%3Db04339%3AP%3D%2F%3AE%3D152408b2f28%3AS%3D9a57fbc29200b7dff1aed88c48aa5ab2][Protel中Cap,Cap2，Cap Pol的区别]]

**** knowledge

***** 纹波

纹波(ripple)是由于直流稳定电源的电压波动而造成的一种现象，因为直流稳定电源一般
是由交流电源经整流稳压等环节而形成的，这就不可避免地在直流稳定量中多少
带有一些交流成份，这种叠加在直流稳定量上的交流分量就称之为纹波。纹波的
成分较为复杂，它的形态一般为频率高于工频的类似正弦波的谐波，另一种则是
宽度很窄的脉冲波。

***** mil

英制单位，100mil = 2.54mm

***** 电容尺寸

**** wally.pcblib

***** NE100S18K

1. 尺寸：58mm * 22mm
2. 引脚直径： 1mm，1.5mm
3. 引脚间距（图）

   *不太好测量*

*****
*** ARM芯片

+ Cortex系列
+ 内含CAN控制器
+ 最好支持openocd

*** flash
+ NAND（安装Ubuntu和ROS所需要的容量）
+ NOR
*** CAN模块
+ 淘宝：http://item.taobao.com/item.htm?spm=a230r.1.14.1.1GNisu&id=39187810657&ns=1&abbucket=14#detail

*** 网口
**** socket
整合多个串口
**** 多机
台式机运行图形界面
ARM传输数据
笔记本做算法
*** 参考
**** pcDuino
+ http://learn.linksprite.com/pcduino/pcduino-3-circuit-diagram/
+ https://github.com/pcduino/pcDuino3C_carrierboard
**** 古月居 http://blog.csdn.net/hcx25909/article/details/8539587
**** OpenSource hardware
+ https://www.linux.com/news/embedded-mobile/mobile-linux/732197-top-10-open-source-linux-boards-under-200
+ http://www.omappedia.com/wiki/PandaBoard
+ http://www.pcworld.com/article/2046232/top-opensource-pcs.html
+ http://www.techhive.com/article/242863/new_89_opensource_hardware_runs_full_linux_os.html
+ https://en.wikipedia.org/wiki/List_of_open-source_hardware_projects
+ https://en.wikipedia.org/wiki/Open-source_hardware

*** supply

* Project                                                           :proj:

#+include: ~/Wally/Project/README.md
#+include: ~/Wally/Project/ChangeLog.org

** Note

1. 任务要有优先级
2. 学习任务放在对应的笔记文件中，方便整理笔记，此处仅记录链接
3. 不打标签，仅在本文件链接上打标签
4. 第一个学习任务对应一个项目
5. 拟名字要认真，不要轻易改，有链接

** [#A] [[file:~/Wally/Journal/Note/ros.org::*Python2DSLAM][Python2DSLAM]]                                           :slam:python:
** [#C] [[file:~/Wally/Journal/Note/prog.org::*toolbox][toolbox]]                                                :script:bash:
** [#A] [[file:~/Wally/Journal/Note/ros.org::*TimBailey][TimBailey]]                                                     :slam:

** [#A] [[file:~/Wally/Journal/Note/ros.org::*imutoolbox][imutoolbox]]                                              :imu:matlab:
** [#B] [[file:~/Wally/Journal/Note/em.org::*yasnippet][yasnippet]]                                          :emacs:yasnippet:
** [#B] [[file:~/Wally/Journal/Note/em.org::*.emacs.d][.emacs.d]]                                                     :emacs:
* Progress                                                         :progress:
** Note

1. 学习是有系统的
2. 长期零散化的知识吸收是有害的
3. 坚持就是力量
4. 要有优先级
5. 第一个学习任务对应一个项目，要有根目录
6. 每一个学习任务要有一个 ChangeLog 记录学习进度
7. 学习任务放在对应的笔记文件中，方便整理笔记，此处仅记录链接
8. 不打标签，仅在本文件链接上打标签
9. 每天抽出一个小时用于自我增值
10. 优先级为 A 的学习任务每周至少进行一次
11. 优先级为 B 的学习任务每两周一次
12. 拟名字要认真，不要轻易改，有链接

** [#A] [[file:~/Wally/Journal/Note/alg.org::*%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA][算法导论]]                                                       :alg:
** [#A] [[file:~/Wally/Journal/Note/alg.org::*%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84][数据结构]]                                             :datastructure:
** [#A] [[file:~/Wally/Journal/Note/stu.org::*%E5%BE%B7%E8%AF%AD%E5%AD%A6%E4%B9%A0][德语学习]]                                                   :deutsch:
** [#A] [[file:~/Wally/Journal/Note/es.org::*Raspberry%20%E5%AD%A6%E4%B9%A0][Raspberry 学习]]                                      :rasp:raspberry:
** [#A] [[file:~/Wally/Journal/Note/stu.org::*%E6%A6%82%E7%8E%87%E8%AE%BA][概率论]]                                                        :math:
** [#B] [[file:~/Wally/Journal/Note/es.org::*Arduino%20%E5%AD%A6%E4%B9%A0][Arduino 学习]]                                               :arduino:
** [#B] [[file:~/Wally/Journal/Note/es.org::*ARM%E5%B5%8C%E5%85%A5%E5%BC%8F%E7%B3%BB%E7%BB%9F%E5%BC%80%E5%8F%91][ARM嵌入式系统开发]]                                              :arm:
** [#B] [[file:~/Wally/Journal/Note/linux.org::*Linux%E5%86%85%E6%A0%B8%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0][Linux内核设计与实现]]                                   :kernel:linux:
** [#B] [[file:~/Wally/Journal/Note/stu.org::*%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0][线性代数]]                                                      :math:
** [#B] [[file:~/Wally/Journal/Note/ros.org::*OpenCV%20%E5%AD%A6%E4%B9%A0][OpenCV 学习]]
** [#B] [[file:~/Wally/Journal/Note/ros.org::*%E6%95%B0%E5%AD%97%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86][数字图像处理]]
** [#B] [[file:~/Wally/Journal/Note/prog.org::*%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AD%A6%E4%B9%A0][数据库学习]]                                                     :sql:
** [#B] [[file:~/Wally/Journal/Note/prog.org::*Qt%20%E5%AD%A6%E4%B9%A0][Qt 学习]]                                                         :qt:
